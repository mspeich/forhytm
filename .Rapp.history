baad <- baad.data::baad_data()
head(baad$data)
table(baad$species)
table(baad$data$species)
baad.ps <- baad$data[baad$data$species=="Pinus sylvestris",]
head(baad.ps)
tail(baad.ps)
nrow(baad.ps)
str(baad)
head(baad.ps)
plot(baad.ps$d.bh,baad.ps$m.st)
plot(baad.ps$d.bh,baad.ps$a.lf)
plot(baad.ps$d.bh,baad.ps$m.lf)
baad.pa <- baad$data[baad$data$species=="Picea abies",]
nrow(baad.pa)
nrow(baad.ps)
nrow(baad.ld)
baad.ld <- baad$data[baad$data$species=="Larix decidua",]
nrow(baad.ld)
baad.fs <- baad$data[baad$data$species=="Fagus sylvatica",]
nrow(baad.fs)
baad.aa <- baad$data[baad$data$species=="Abies alba",]
nrow(baad.aa)
nrow(baad$data[baad$data$species=="Pinus cembra",])
nrow(baad$data[baad$data$species=="Pinus montana",])
nrow(baad$data[baad$data$species=="Pinus mugo",])
nrow(baad$data[baad$data$species=="Betula pendula",])
nrow(baad$data[baad$data$species=="Carpinus betulus",])
nrow(baad$data[baad$data$species=="Acer campestre",])
nrow(baad$data[baad$data$species=="Acer platanoides",])
nrow(baad$data[baad$data$species=="Acer pseudoplatanus",])
nrow(baad$data[baad$data$species=="Alnus glutinosa",])
nrow(baad$data[baad$data$species=="Alnus incana",])
nrow(baad$data[baad$data$species=="Alnus viridis",])
nrow(baad$data[baad$data$species=="Castanea sativa",])
nrow(baad$data[baad$data$species=="Corylus avellana",])
nrow(baad$data[baad$data$species=="Fraxinus excelsior",])
nrow(baad$data[baad$data$species=="Populus nigra",])
nrow(baad$data[baad$data$species=="Populus tremula",])
nrow(baad$data[baad$data$species=="Quercus petraea",])
nrow(baad$data[baad$data$species=="Quercus pubescens",])
nrow(baad$data[baad$data$species=="Quercus robur",])
nrow(baad$data[baad$data$species=="Salix alba",])
nrow(baad$data[baad$data$species=="Sorbus aria",])
nrow(baad$data[baad$data$species=="Sorbus aucuparia",])
nrow(baad$data[baad$data$species=="Tilia cordata",])
nrow(baad$data[baad$data$species=="Tilia platyphyllos",])
nrow(baad$data[baad$data$species=="Ulmus scabra",])
head(baad.ps)
names(baad.ps)
baad.bp <- baad$data[baad$data$species=="Betula pendula",]		# 208 records
plot(baad.bp$d.bh,baad.bp$a.lf)
plot(baad.as$d.bh,baad.as$a.lf)
baad.as <- baad$data[baad$data$species=="Acer pseudoplatanus",]	# 43 records
plot(baad.as$d.bh,baad.as$a.lf)
baad.pa <- baad$data[baad$data$species=="Picea abies",]			# 218 records
plot(baad.pa$d.bh,baad.pa$a.lf)
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/dynhmax/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE)#
}#
#
dev.off()
c2 <- 6#
a1 <- exp(-1.8)#
a2 <- 1.4#
#
la_tm <- function(dbh){#
	lndia <- log(dbh)#
	la <- c2*a1*exp(lndia*a2)#
	return(la)#
}#
#
la_hb <- function(dbh){#
	la <- c2*a1*dbh^(a2)#
	return(la)#
}#
#
plot(la_tm,from=20,to=99)
plot(la_hb,from=20,to=99,lty=2,add=TRUE)
plot(baad.ps$d.bh,abbd.ps$a.lf)
plot(baad.ps$d.bh,baad.ps$a.lf)
plot(baad.ps$d.bh,baad.ps$m.lf)
plot(baad.ps$d.bh,baad.ps$h.t)
baad.ps
arg <- function(h,hmax){#
	# Auxiliary function for DBH-height allometry#
	rv <- pmin(1,pmax(0,(1-(h-1.37)/(hmax-1.37))))#
	return(rv)#
}#
#
######################################
# # hcls <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
# khmax <- c(60,44,50,26,27,45,22,23,32,42,31,22,6,29,27,33,10,45,42,36,30,45,25,52,27,22,19,30,39,43)						# Species-specific max height [m]#
# kdmax <- c(187,100,180,165,95,99,55,55,99,110,110,110,25,121,99,198,22,154,154,220,110,110,66,143,220,66,66,110,110,143)	# Species-specific max diameter [cm]#
# hmin <- 1.37		#
#
# mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek2/"#
#
# height.in <- read.table(paste0(mpath,"sample_72172_1611.txt"),header=TRUE)#
#
# # Convert from trees/plot to trees/ha#
	# plotsize <- 833#
	# height.in.ha <- height.in#
	# height.in.ha[,2:17] <- height.in[,2:17] * (10000/833)#
num.plot <- function(table.in,max.num=NULL,spcs=NULL,abshmax=65,seedlings=FALSE,year=NULL,cex=1){#
	# Creates a plot showing the proportional NUMBER of trees in each species/height class combination#
    table.in[,2:17] <- table.in[,2:17] * (10000/833)#
	if(is.null(max.num) & seedlings){#
		max.num <- max(table.in[,2:17])#
	} else if (is.null(max.num) & !seedlings){#
		max.num <- max(table.in[,3:17])#
	}#
	if(is.null(spcs)){spcs <- 1:30}#
	#print(max.num)#
	spc.abbrv <- c("Aa","Ld","Pa","Pc","Pm","Ps","Tb","Ac","Ap","As","Ag","Ai","Av","Bp","Cb","Cs","Ca","Fs","Fe","Pn","Pt","Qp","Qu","Qr","Sa","So","Sr","Tc","Tp","Us")#
	hcls <- 0:15#
	hc.low <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
	hc.up <- c(1.37,seq((1.37+4.2),by=4.2,length.out=15))#
	rel <- table.in#
	rel[,2:17] <- rel[,2:17]/max.num#
	# Start with an empty plot#
	par(mar=c(2,2,1,0))#
	plot(1, 1, xlim=c(0,length(spcs)), ylim=c(0,abshmax), type="n", axes=FALSE)#
	axis(side=1,at=1:length(spcs),labels=spc.abbrv[spcs],cex.axis=cex)#
	axis(side=2,at=c(0,hc.up),labels=round(c(0,hc.up)),cex.axis=cex)#
	# Vertical and horizontal lines#
	hlpos <- c(0,hc.up)#
	vlpos <- seq(0.5,(length(spcs)+0.5),by=1)#
	abline(v=vlpos,col="lightgrey",lty=3)#
	abline(h=hlpos,col="lightgrey")#
	# Draw rectangles, where width represents the number of individuals (relative to max.num)#
	for(s in spcs){#
		for(h in hcls){#
			cur <- rel[s,(h+2)]#
			if(h==0 & !seedlings){cur <- 0}#
			halflen <- 0.5*cur  # Half the length of the rectangle to be drawn#
			#print(c(s,h,cur,halflen))#
			if(halflen > 0){rect(xleft=(s-halflen),ybottom=hc.low[(h+1)],xright=(s+halflen),ytop=hc.up[(h+1)])}#
		}#
	}#
	# "Legend" rectangle#
	rect(xleft=13.5,ybottom=hc.low[16],xright=14.5,ytop=hc.up[16])#
	text(x=15,y=((hc.low[16]+hc.up[16])*0.5),labels=paste0("Indicates a DENSITY of ", round(max.num,2), " trees/ha"),adj=c(0,0),cex=cex)#
	#text(x=15,y=((hc.low[15]+hc.up[15])*0.5),labels=paste0("Total density: ", round(sum(table.in[,2:17]),2)),adj=c(0,0))#
	if(!seedlings){text(x=2,y=((hc.low[16]+hc.up[16])*0.5),labels="Seedlings not counted for density!",adj=c(0,0),cex=cex)}#
	if(!is.null(year)){text(x=27,y=((hc.low[16]+hc.up[16])*0.5),labels=year,adj=c(0,0),cex=cex)}#
}#
#
##################
biomass <- function(dbh,a1,a2,c1){#
	lndiam <- log(dbh*100)#
	folwgt <- c1 * a1 * exp(lndiam * a2)#
	stmvol <- 0.12 * exp(lndiam * 2.4)#
	stmwgt <- 0.5 * stmvol#
	bm <- stmwgt + folwgt#
	return(bm)#
}#
##################
#
bio.plot <- function(table.in,max.bio=NULL,spcs=NULL,abshmax=65,cex=1,ds=NULL){#
	spc.abbrv <- c("Aa","Ld","Pa","Pc","Pm","Ps","Tb","Ac","Ap","As","Ag","Ai","Av","Bp","Cb","Cs","Ca","Fs","Fe","Pn","Pt","Qp","Qu","Qr","Sa","So","Sr","Tc","Tp","Us")#
	hcls <- 0:15#
	hc.low <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
	hc.up <- c(1.37,seq((1.37+4.2),by=4.2,length.out=15))#
khmax <- c(60,44,50,26,27,45,22,23,32,42,31,22,6,29,27,33,10,45,42,36,30,45,25,52,27,22,19,30,39,43)						# Species-specific max height [m]#
kdmax <- c(187,100,180,165,95,99,55,55,99,110,110,110,25,121,99,198,22,154,154,220,110,110,66,143,220,66,66,110,110,143)/100	# Species-specific max diameter [cm]#
ka1 <- c(exp(-1.5),exp(-2.3),exp(-1.5),exp(-1.5),exp(-1.5),exp(-1.8),exp(-1.5),exp(-2.3),exp(-2.9),exp(-2.9),exp(-2.3),exp(-2.3),exp(-2.3),exp(-2.5),exp(-2.9),exp(-2.9),exp(-2.9),exp(-2.9),exp(-2.3),exp(-2.3),exp(-2.3),exp(-2.9),exp(-2.9),exp(-2.9),exp(-2.5),exp(-2.3),exp(-2.5),exp(-2.9),exp(-2.9),exp(-2.9))#
ka2 <- c(1.6, 1.4, 1.6, 1.6, 1.6, 1.4, 1.6, 1.4, 1.7, 1.7, 1.4, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7, 1.7, 1.4, 1.4, 1.4,1.7, 1.7,1.7, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7)#
kc1 <- c(0.45,0.35,0.45,0.45,0.45,0.45,0.45,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35)#
kc2 <- c(6,12,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12)#
#
	# Creates a plot showing the proportional BIOMASS of each species/height class combination#
	if(is.null(spcs)){spcs <- 1:30}#
	## Convert from height to DBH#
	dbh <- table.in#
	bio <- table.in#
	dbh[,2:17] <- 0#
	bio[,2:17] <- 0#
	for(s in spcs){#
		# The next 2 lines calculate the DBH corresponding to each height class for each species#
		#args <- arg(hcls,khmax[s])#
		# args <- arg(hc.low,khmax[s])#
		# #print(c(s,args))#
		# dbh[s,2:17] <- (kdmax[s] * (1-sqrt(args))) + 0.0127#
		# a1 <- ka1[s]#
		# a2 <- ka2[s]#
		# c1 <- kc1[s]#
		# bio[s,3:17] <- biomass(dbh[s,3:17],a1,a2,c1)#
		# bio[s,2] <- bio[s,3] / 10#
		for(h in 1:length(hcls)){#
			hc <- h+1#
			print(c(h,hc))#
			args <- arg(hc.low[h],khmax[s])#
		#print(c(s,args))#
			dbh[s,hc] <- (kdmax[s] * (1-sqrt(args))) + 0.0127#
			a1 <- ka1[s]#
			a2 <- ka2[s]#
			c1 <- kc1[s]#
			#lndbh <- log(dbh[s,hc]*100)#
			bio[s,hc] <- biomass(dbh[s,hc],a1,a2,c1)#
		}#
		bio[s,2] <- bio[s,3] / 10#
	}#
	bio[,2:17] <- bio[,2:17] * 10 / 833#
	bio[,2:17] <- bio[,2:17] * table.in[,2:17]#
	#print(bio)#
	if(is.null(max.bio)){max.bio <- max(bio[,2:17])}#
	#print(max.bio)#
	rel <- bio#
	rel[,2:17] <- rel[,2:17]/max.bio#
	# Start with an empty plot#
	par(mar=c(2,2,1,0))#
	plot(1, 1, xlim=c(0,length(spcs)), ylim=c(0,abshmax), type="n", axes=FALSE)#
	axis(side=1,at=1:length(spcs),labels=spc.abbrv[spcs],cex.axis=cex)#
	axis(side=2,at=c(0,hc.up),labels=round(c(0,hc.up)),cex.axis=cex)#
	# Vertical and horizontal lines#
	hlpos <- c(0,hc.up)#
	vlpos <- seq(0.5,(length(spcs)+0.5),by=1)#
	abline(v=vlpos,col="lightgrey",lty=3)#
	abline(h=hlpos,col="lightgrey")#
	# Draw rectangles, where width represents the number of individuals (relative to max.num)#
	for(s in spcs){#
		for(h in hcls){#
			cur <- rel[s,(h+2)]#
			halflen <- 0.5*cur  # Half the length of the rectangle to be drawn#
			#print(c(s,h,cur,halflen))#
			if(halflen > 0){rect(xleft=(s-halflen),ybottom=hc.low[(h+1)],xright=(s+halflen),ytop=hc.up[(h+1)])}#
		}#
	}	#
	# "Legend" rectangle#
	rect(xleft=13.5,ybottom=hc.low[16],xright=14.5,ytop=hc.up[16])#
	text(x=15,y=((hc.low[16]+hc.up[16])*0.5),labels=paste0("Indicates a BIOMASS of ", round(max.bio,1), " t/ha"),adj=c(0,0),cex=cex)#
	text(x=15,y=((hc.low[15]+hc.up[15])*0.5),labels=paste0("Total biomass: ", round(sum(bio[,2:17]),2)),adj=c(0,0),cex=cex)#
	if(!is.null(ds)){text(x=2,y=((hc.low[15]+hc.up[15])*0.5),labels=paste0("Drought index: ", ds),adj=c(0,0),cex=cex)}#
}#
#
##################
#
lai.plot <- function(table.in,max.lai=NULL,spcs=NULL,abshmax=65,cex=1){#
	spc.abbrv <- c("Aa","Ld","Pa","Pc","Pm","Ps","Tb","Ac","Ap","As","Ag","Ai","Av","Bp","Cb","Cs","Ca","Fs","Fe","Pn","Pt","Qp","Qu","Qr","Sa","So","Sr","Tc","Tp","Us")#
	hcls <- 0:15#
	hc.low <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
	hc.up <- c(1.37,seq((1.37+4.2),by=4.2,length.out=15))#
  khmax <- c(60,44,50,26,27,45,22,23,32,42,31,22,6,29,27,33,10,45,42,36,30,45,25,52,27,22,19,30,39,43)						# Species-specific max height [m]#
  kdmax <- c(187,100,180,165,95,99,55,55,99,110,110,110,25,121,99,198,22,154,154,220,110,110,66,143,220,66,66,110,110,143)/100	# Species-specific max diameter [cm]#
  ka1 <- c(exp(-1.5),exp(-2.3),exp(-1.5),exp(-1.5),exp(-1.5),exp(-1.8),exp(-1.5),exp(-2.3),exp(-2.9),exp(-2.9),exp(-2.3),exp(-2.3),exp(-2.3),exp(-2.5),exp(-2.9),exp(-2.9),exp(-2.9),exp(-2.9),exp(-2.3),exp(-2.3),exp(-2.3),exp(-2.9),exp(-2.9),exp(-2.9),exp(-2.5),exp(-2.3),exp(-2.5),exp(-2.9),exp(-2.9),exp(-2.9))#
  ka2 <- c(1.6, 1.4, 1.6, 1.6, 1.6, 1.4, 1.6, 1.4, 1.7, 1.7, 1.4, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7, 1.7, 1.4, 1.4, 1.4,1.7, 1.7,1.7, 1.4, 1.4, 1.4, 1.7, 1.7, 1.7)#
  kc1 <- c(0.45,0.35,0.45,0.45,0.45,0.45,0.45,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35,0.35)#
  kc2 <- c(6,12,6,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12)#
#
	# Creates a plot showing the proportional LAI of each species/height class combination#
	if(is.null(spcs)){spcs <- 1:30}#
	## Convert from height to DBH#
	dbh <- table.in#
	la <- table.in#
	dbh[,2:17] <- 0#
	la[,2:17] <- 0	#
	for(s in spcs){#
		# The next 2 lines calculate the DBH corresponding to each height class for each species#
		for(h in 1:length(hcls)){#
			hc <- h+1#
			print(c(h,hc))#
			args <- arg(hc.low[h],khmax[s])#
		#print(c(s,args))#
			dbh[s,hc] <- (kdmax[s] * (1-sqrt(args))) + 0.0127#
			a1 <- ka1[s]#
			a2 <- ka2[s]#
			c2 <- kc2[s]#
			lndbh <- log(dbh[s,hc]*100)#
			la[s,hc] <- c2 * a1 * exp(lndbh * a2)#
		}#
		la[s,2] <- la[s,3] / 10#
	}#
	la[,2:17] <- table.in[,2:17] * la[,2:17]#
	lai <- la#
	lai[2:17] <- la[,2:17] / (833*2)#
	print(lai)#
	if(is.null(max.lai)){max.lai <- max(lai[,2:17])}#
	#print(max.lai)#
	#print(sum(lai[,2:17]))#
	rel <- lai#
	rel[,2:17] <- rel[,2:17]/max.lai#
	# Start with an empty plot#
	par(mar=c(2,2,1,0))#
	plot(1, 1, xlim=c(0,length(spcs)), ylim=c(0,abshmax), type="n", axes=FALSE)#
	axis(side=1,at=1:length(spcs),labels=spc.abbrv[spcs],cex.axis=cex)#
	axis(side=2,at=c(0,hc.up),labels=round(c(0,hc.up)),cex.axis=cex)#
	# Vertical and horizontal lines#
	hlpos <- c(0,hc.up)#
	vlpos <- seq(0.5,(length(spcs)+0.5),by=1)#
	abline(v=vlpos,col="lightgrey",lty=3)#
	abline(h=hlpos,col="lightgrey")#
	# Draw rectangles, where width represents the number of individuals (relative to max.num)#
	for(s in spcs){#
		for(h in hcls){#
			cur <- rel[s,(h+2)]#
			halflen <- 0.5*cur  # Half the length of the rectangle to be drawn#
			#print(c(s,h,cur,halflen))#
			if(halflen > 0){rect(xleft=(s-halflen),ybottom=hc.low[(h+1)],xright=(s+halflen),ytop=hc.up[(h+1)])}#
		}#
	}	#
	# "Legend" rectangle#
	rect(xleft=13.5,ybottom=hc.low[16],xright=14.5,ytop=hc.up[16])#
	text(x=15,y=((hc.low[16]+hc.up[16])*0.5),labels=paste0("Indicates an LAI of ", round(max.lai,2)),adj=c(0,0),cex=cex)#
	text(x=15,y=((hc.low[15]+hc.up[15])*0.5),labels=paste0("Total LAI: ", round(sum(lai[,2:17]),2)),adj=c(0,0),cex=cex)#
}#
#############################
#mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek2/cells/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/dynhmax/cells/"#
#
years <- 1500:1670#
cell <- 54133#
#
byyear <- read.table(paste0(mpath,"0",cell,".txt"))#
#
pdf(file=paste0(mpath,cell,"_standplots2.pdf"))#
#
for(i in 1:length(years)){#
	year <- years[i]#
	infile <- paste0(mpath,"sample_",cell,"_",year,".txt")#
	height.in <- read.table(infile,header=TRUE)#
	ds <- byyear[i,2]#
	par(fig=c(0,1,0.66,1))#
	num.plot(height.in,max.num=1000,year=year,cex=0.7)#
	par(fig=c(0,1,0.33,0.66),new=TRUE)#
	bio.plot(height.in,max.bio=60,cex=0.7,ds=round(ds,2))#
	par(fig=c(0,1,0,0.33),new=TRUE)#
	lai.plot(height.in,max.lai=0.5,cex=0.7)#
	}#
#
dev.off()
burger.ps <- read.table("/Volumes/FORHYCS/Data/Burger/Pinus_sylvestris.csv",header=TRUE)
head(burger.ps)
burger.ps <- read.table("/Volumes/FORHYCS/Data/Burger/Pinus_sylvestris.csv",header=TRUE,sep=" ")
head(burger.ps)
burger.ps <- read.table("/Volumes/FORHYCS/Data/Burger/Pinus_sylvestris.csv",header=TRUE,sep=";")
head(burger.ps)
plot(burger.ps$DBH,burger.ps$LA_per_tree)
plot(burger.ps$DBH,burger.ps$LA_per_tree,xlim=c(0,100))
plot(la_hb,from=20,to=99,lty=2,add=TRUE)
baad.dbh <- baad.ps$dbh*100
baad.la <- baad.ps$a.lf
points(baad.dbh,baad.la,col="red")
head(baad.ps)
baad.dbh <- baad.ps$d.bh*100
baad.la <- baad.ps$a.lf
points(baad.dbh,baad.la,col="red")
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/dynhmax/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE)#
}#
#
dev.off()
plot(baad.pa$d.bh,baad.pa$m.lf)
la_hb <- function(dbh){#
	c2 <- 6#
	a1 <- exp(-1.5)#
	a2 <- 1.6#
	la <- c2*a1*dbh^(a2)#
	return(la)#
}#
#
plot(la_hb,from=20,to=180,lty=2)#
baad.dbh <- baad.pa$d.bh*100#
baad.la <- baad.pa$a.lf#
points(baad.dbh,baad.la,col="red")
baad.as <- baad$data[baad$data$species=="Acer pseudoplatanus",]	# 43 records
plot(baad.as$d.bh,baad.as$a.lf)
baad.as
plot(baad.as$d.ba,baad.as$a.lf)
plot(baad.as$d.ba*100,baad.as$a.lf)
ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
plot.ecor <- function(ecor,mpath,max.bio,max.lai,roots,roots.rel=FALSE){#
	elvCl <- c("< 700","700 - 900","900 - 1100","1100 - 1300","1300 - 1500","1500 - 1700","1700 - 1900","1900 - 2100","> 2100")#
	expCl <- c("North-facing","South-facing")#
	spc <- c("Abies alba","Larix decidua","Picea abies","Pinus cembra","Pinus montana","Pinus sylvestris","Acer spp","Alnus spp.","Fagus sylvatica","Quercus spp.","Others")#
	spc.cols <- c("#00e2d7","#FA9619","#385723","#db4343","#f26565","#a30000","#8eed00","#bf00f9","#393c96","#34a877","#90a5a4")	#
	# Read in files#
	bio.in <-read.table(paste0(mpath,"bio_ecor_",ecor,".txt"),header=TRUE)#
	lai.in <-read.table(paste0(mpath,"lai_ecor_",ecor,".txt"),header=TRUE)#
	if(roots){sd.in <- read.table(paste0(mpath,"sd_ecor.txt"),header=TRUE)}#
	# Number of years#
	if(roots){#
	nyrs <- nrow(sd.in)#
	}else{#
		nyrs <- nrow(bio.in)#
	}#
# Aggregate biomass and LAI to groups of species#
	bio <- bio.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	bio$acer <- bio.in$Ac + bio.in$Ap + bio.in$As#
	bio$alnus <- bio.in$Ag + bio.in$Ai + bio.in$Av#
	bio$fagus <- bio.in$Fs#
	bio$quercus <- bio.in$Qp + bio.in$Qu + bio.in$Qr#
	bio$others <- bio.in$Tb + bio.in$Bp + bio.in$Cb + bio.in$Cs + bio.in$Ca + bio.in$Fe + bio.in$Pn + bio.in$Pt + bio.in$Sa + bio.in$So + bio.in$Sr + bio.in$Tc + bio.in$Tp + bio.in$Us#
	lai <- lai.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	lai$acer <- lai.in$Ac + lai.in$Ap + lai.in$As#
	lai$alnus <- lai.in$Ag + lai.in$Ai + lai.in$Av#
	lai$fagus <- lai.in$Fs#
	lai$quercus <- lai.in$Qp + lai.in$Qu + lai.in$Qr#
	lai$others <- lai.in$Tb + lai.in$Bp + lai.in$Cb + lai.in$Cs + lai.in$Ca + lai.in$Fe + lai.in$Pn + lai.in$Pt + lai.in$Sa + lai.in$So + lai.in$Sr + lai.in$Tc + lai.in$Tp + lai.in$Us#
	# Draw biomass plot#
	par(fig=c(0,0.8,0.55,0.9))#
	par(mar=c(1,3,0,0))#
	plot.stack(df=bio,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.bio,ylab="Above-ground biomass [t/ha]",xint=20,yint=50)#
	# Draw LAI plot#
	par(fig=c(0,0.8,0.2,0.55),new=TRUE)#
	par(mar=c(1,3,0,0))#
	plot.stack(df=lai,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.lai,ylab="Leaf Area Index",xint=20,yint=1)#
	if(!roots){#
			axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	mtext(side=1,text="Simulation year",line=1)#
#
	}#
	if(roots){#
	# Draw soil depth line plot#
	par(fig=c(0,0.8,0,0.2),new=TRUE)#
	par(mar=c(2,3,0,0))#
	sd <- sd.in[,paste0("X",ecor)]#
	#sd.plot <- 1000-(sd*1000)#
	if(roots.rel){#
	  plot(seq(1:nyrs),sd*1000,type="n",ylim=c(0,1000),axes=FALSE)#
	  	vlpos <- seq(0,nyrs,by=20)#
	  hlpos <- seq(0,1000,by=200)#
	  abline(v=vlpos,col="lightgrey")#
	  abline(h=hlpos,col="lightgrey")#
	  lines(seq(1:nyrs),sd*1000)#
	  axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	  axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
    	mtext(side=1,text="Simulation year",line=1)#
	  mtext(side=2,text="Rooting depth [mm]",line=2)#
	}  else {#
		plot(seq(1:nyrs),sd,type="n",ylim=c(0,1000),axes=FALSE)#
	vlpos <- seq(0,nyrs,by=20)#
	hlpos <- seq(0,200,by=20)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	lines(seq(1:nyrs),sd)#
	axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	axis(side=2,at=seq(0,200,by=20),labels=seq(0,200,by=20),line=-0.5)#
	mtext(side=1,text="Simulation year",line=1)#
	mtext(side=2,text="SFC [mm]",line=2)#
	}#
	# vlpos <- seq(0,nyrs,by=20)#
	# hlpos <- seq(0,1000,by=200)#
	# abline(v=vlpos,col="lightgrey")#
	# abline(h=hlpos,col="lightgrey")#
	# lines(seq(1:nyrs),sd*1000)#
	# axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	# axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
	# mtext(side=1,text="Simulation year",line=1)#
	# mtext(side=2,text="Rooting depth [mm]",line=2)#
	}#
	# Draw species legend#
	par(fig=c(0.8,1,0.2,1),new=TRUE)#
	par(mar=c(2,0,3,1))#
	plot(1,1,xlim=c(0,1),ylim=c(0,1),type="n",axes=FALSE)#
	nspc <- length(spc)#
	spc.int <- 0.9/nspc#
	y.pos <- seq(0.05,0.95,by=spc.int)#
	# Start from bottom#
	spc <- rev(spc)#
	spc.cols <- rev(spc.cols)#
	for(i in 1:nspc){#
		rect(xleft = 0.05,ybottom=(y.pos[i]-(0.25*spc.int)),xright=0.25,ytop=(y.pos[i]+(0.25*spc.int)),col=spc.cols[i])#
		text(x=0.3,y=y.pos[i],adj=0,labels=spc[i],cex=0.75)#
	}#
	par(fig=c(0,1,0.9,1),new=TRUE)#
	# Title for whole plot#
	asp.code <- as.numeric(substr(ecor,2,2))#
	elv.code <- as.numeric(substr(ecor,3,4))#
	asp.str <- expCl[asp.code]#
	elv.str <- elvCl[elv.code]#
	mtext(text=paste0(elv.str, " m asl - ",asp.str),side=3,font=2,cex=2)#
}#
#
plot.stack <- function(df,order,cols,xlen,ylen,ylab,xint,yint){#
	plot(10,10,xlim=c(1,xlen),ylim=c(0,ylen),type="n",mgp=c(3,1,0),axes=FALSE)#
	axis(side=2,at=seq(0,ylen,by=yint),labels=seq(0,ylen,by=yint),line=-0.5)#
	mtext(side=2,text=ylab,line=2)#
	# Draw grid lines#
	vlpos <- seq(0,xlen,by=xint)#
	hlpos <- seq(0,ylen,by=yint)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	yb <- rep(0,xlen)#
	for(i in 1:length(order)){#
		yt <- yb + df[,order[i]]#
		polygon(x=c(seq(1,xlen),seq(xlen,1,-1)),y=c(yb,rev(yt)),col=cols[i])#
		yb <- yt#
	}#
}
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek_hmax/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE)#
}#
#
dev.off()
ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
plot.ecor <- function(ecor,mpath,max.bio,max.lai,roots,roots.rel=FALSE){#
	elvCl <- c("< 700","700 - 900","900 - 1100","1100 - 1300","1300 - 1500","1500 - 1700","1700 - 1900","1900 - 2100","> 2100")#
	expCl <- c("North-facing","South-facing")#
	spc <- c("Abies alba","Larix decidua","Picea abies","Pinus cembra","Pinus montana","Pinus sylvestris","Acer spp","Alnus spp.","Fagus sylvatica","Quercus spp.","Others")#
	spc.cols <- c("#00e2d7","#FA9619","#385723","#db4343","#f26565","#a30000","#8eed00","#bf00f9","#393c96","#34a877","#90a5a4")	#
	# Read in files#
	bio.in <-read.table(paste0(mpath,"bio_ecor_",ecor,".txt"),header=TRUE)#
	lai.in <-read.table(paste0(mpath,"lai_ecor_",ecor,".txt"),header=TRUE)#
	if(roots){sd.in <- read.table(paste0(mpath,"sd_ecor.txt"),header=TRUE)}#
	# Number of years#
	if(roots){#
	nyrs <- nrow(sd.in)#
	}else{#
		nyrs <- nrow(bio.in)#
	}#
# Aggregate biomass and LAI to groups of species#
	bio <- bio.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	bio$acer <- bio.in$Ac + bio.in$Ap + bio.in$As#
	bio$alnus <- bio.in$Ag + bio.in$Ai + bio.in$Av#
	bio$fagus <- bio.in$Fs#
	bio$quercus <- bio.in$Qp + bio.in$Qu + bio.in$Qr#
	bio$others <- bio.in$Tb + bio.in$Bp + bio.in$Cb + bio.in$Cs + bio.in$Ca + bio.in$Fe + bio.in$Pn + bio.in$Pt + bio.in$Sa + bio.in$So + bio.in$Sr + bio.in$Tc + bio.in$Tp + bio.in$Us#
	lai <- lai.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	lai$acer <- lai.in$Ac + lai.in$Ap + lai.in$As#
	lai$alnus <- lai.in$Ag + lai.in$Ai + lai.in$Av#
	lai$fagus <- lai.in$Fs#
	lai$quercus <- lai.in$Qp + lai.in$Qu + lai.in$Qr#
	lai$others <- lai.in$Tb + lai.in$Bp + lai.in$Cb + lai.in$Cs + lai.in$Ca + lai.in$Fe + lai.in$Pn + lai.in$Pt + lai.in$Sa + lai.in$So + lai.in$Sr + lai.in$Tc + lai.in$Tp + lai.in$Us#
	# Draw biomass plot#
	par(fig=c(0,0.8,0.55,0.9))#
	par(mar=c(1,3,0,0))#
	plot.stack(df=bio,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.bio,ylab="Above-ground biomass [t/ha]",xint=20,yint=50)#
	# Draw LAI plot#
	par(fig=c(0,0.8,0.2,0.55),new=TRUE)#
	par(mar=c(1,3,0,0))#
	plot.stack(df=lai,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.lai,ylab="Leaf Area Index",xint=20,yint=1)#
	if(!roots){#
			axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	mtext(side=1,text="Simulation year",line=1)#
#
	}#
	if(roots){#
	# Draw soil depth line plot#
	par(fig=c(0,0.8,0,0.2),new=TRUE)#
	par(mar=c(2,3,0,0))#
	sd <- sd.in[,paste0("X",ecor)]#
	#sd.plot <- 1000-(sd*1000)#
	if(roots.rel){#
	  plot(seq(1:nyrs),sd*1000,type="n",ylim=c(0,1000),axes=FALSE)#
	  	vlpos <- seq(0,nyrs,by=20)#
	  hlpos <- seq(0,1000,by=200)#
	  abline(v=vlpos,col="lightgrey")#
	  abline(h=hlpos,col="lightgrey")#
	  lines(seq(1:nyrs),sd*1000)#
	  axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	  axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
    	mtext(side=1,text="Simulation year",line=1)#
	  mtext(side=2,text="Rooting depth [mm]",line=2)#
	}  else {#
		plot(seq(1:nyrs),sd,type="n",ylim=c(0,200),axes=FALSE)#
	vlpos <- seq(0,nyrs,by=20)#
	hlpos <- seq(0,200,by=20)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	lines(seq(1:nyrs),sd)#
	axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	axis(side=2,at=seq(0,200,by=20),labels=seq(0,200,by=20),line=-0.5)#
	mtext(side=1,text="Simulation year",line=1)#
	mtext(side=2,text="SFC [mm]",line=2)#
	}#
	# vlpos <- seq(0,nyrs,by=20)#
	# hlpos <- seq(0,1000,by=200)#
	# abline(v=vlpos,col="lightgrey")#
	# abline(h=hlpos,col="lightgrey")#
	# lines(seq(1:nyrs),sd*1000)#
	# axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	# axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
	# mtext(side=1,text="Simulation year",line=1)#
	# mtext(side=2,text="Rooting depth [mm]",line=2)#
	}#
	# Draw species legend#
	par(fig=c(0.8,1,0.2,1),new=TRUE)#
	par(mar=c(2,0,3,1))#
	plot(1,1,xlim=c(0,1),ylim=c(0,1),type="n",axes=FALSE)#
	nspc <- length(spc)#
	spc.int <- 0.9/nspc#
	y.pos <- seq(0.05,0.95,by=spc.int)#
	# Start from bottom#
	spc <- rev(spc)#
	spc.cols <- rev(spc.cols)#
	for(i in 1:nspc){#
		rect(xleft = 0.05,ybottom=(y.pos[i]-(0.25*spc.int)),xright=0.25,ytop=(y.pos[i]+(0.25*spc.int)),col=spc.cols[i])#
		text(x=0.3,y=y.pos[i],adj=0,labels=spc[i],cex=0.75)#
	}#
	par(fig=c(0,1,0.9,1),new=TRUE)#
	# Title for whole plot#
	asp.code <- as.numeric(substr(ecor,2,2))#
	elv.code <- as.numeric(substr(ecor,3,4))#
	asp.str <- expCl[asp.code]#
	elv.str <- elvCl[elv.code]#
	mtext(text=paste0(elv.str, " m asl - ",asp.str),side=3,font=2,cex=2)#
}#
#
plot.stack <- function(df,order,cols,xlen,ylen,ylab,xint,yint){#
	plot(10,10,xlim=c(1,xlen),ylim=c(0,ylen),type="n",mgp=c(3,1,0),axes=FALSE)#
	axis(side=2,at=seq(0,ylen,by=yint),labels=seq(0,ylen,by=yint),line=-0.5)#
	mtext(side=2,text=ylab,line=2)#
	# Draw grid lines#
	vlpos <- seq(0,xlen,by=xint)#
	hlpos <- seq(0,ylen,by=yint)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	yb <- rep(0,xlen)#
	for(i in 1:length(order)){#
		yt <- yb + df[,order[i]]#
		polygon(x=c(seq(1,xlen),seq(xlen,1,-1)),y=c(yb,rev(yt)),col=cols[i])#
		yb <- yt#
	}#
}
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek_hmax/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE)#
}#
#
dev.off()
1/0.2
burger.ps <- read.table("/Volumes/FORHYCS/Data/Burger/Pinus_sylvestris.csv",header=TRUE,sep=";")
head(burger.ps)
plot(burger.ps$height,burger.ps$c_SLA_dry)
burger.qs <- read.table("/Volumes/FORHYCS/Data/Burger/Quercus_sp.csv",header=TRUE,sep=";")
plot(burger.qs$height,burger.qs$c_SLA_dry)
burger.fs <- read.table("/Volumes/FORHYCS/Data/Burger/Fagus_sylvatica.csv",header=TRUE,sep=";")
plot(burger.fs$height,burger.fs$c_SLA_dry)
burger.aa <- read.table("/Volumes/FORHYCS/Data/Burger/Abies_alba.csv",header=TRUE,sep=";")
plot(burger.aa$height,burger.aa$c_SLA_dry)
plot(burger.ps$height,burger.ps$c_SLA_dry)
plot(burger.ps$height,(1/burger.ps$c_SLA_dry))
plot(burger.aa$height,burger.aa$c_SLA_dry)
plot(burger.fs$height,burger.fs$c_SLA_dry)
plot(burger.aa$height,burger.aa$c_SLA_dry)
plot(burger.fs$height,burger.fs$c_SLA_dry)
plot(burger.aa$height,burger.aa$c_SLA_dry)
plot(burger.fs$height,burger.fs$c_SLA_dry)
0.117
1/0.117
plot(burger.ps$height,burger.ps$c_SLA_dry)
6.862/0.34
plot(burger.ps$height,burger.ps$SLA_fresh)
plot(burger.pa$height,burger.pa$SLA_fresh)
plot(burger.aa$height,burger.aa$SLA_fresh)
plot(burger.fs$height,burger.fs$SLA_fresh)
plot(burger.qs$height,burger.qs$SLA_fresh)
baad <- baad.data::baad_data()#
#
baad.ps <- baad$data[baad$data$species=="Pinus sylvestris",]	# 371 records#
baad.pa <- baad$data[baad$data$species=="Picea abies",]			# 218 records#
baad.fs <- baad$data[baad$data$species=="Fagus sylvatica",]		# 62 records#
baad.bp <- baad$data[baad$data$species=="Betula pendula",]		# 208 records#
baad.as <- baad$data[baad$data$species=="Acer pseudoplatanus",]	# 43 records - seedlings only#
baad.cs <- baad$data[baad$data$species=="Castanea sativa",]		# 22 records#
baad.fe <- baad$data[baad$data$species=="Fraxinus excelsior",]	# 45 records
head(baad.ps)
plot(baad.ps$d.bh,baad.ps$a.ssbh)
plot(baad.pa$d.bh,baad.pa$a.ssbh)
plot(baad.fs$d.bh,baad.fs$a.ssbh)
plot(baad.cs$d.bh,baad.cs$a.ssbh)
head(baad.cs)
plot(baad.bp$d.bh,baad.bp$a.ssbh)
plot(baad.ps$d.bh,baad.ps$a.ssbh)
c2 <- 6#
a1 <- exp(-1.8)#
a2 <- 1.4#
#
la_tm <- function(dbh){#
	lndia <- log(dbh)#
	la <- c2*a1*exp(lndia*a2)#
	return(la)#
}#
#
la_hb <- function(dbh){#
	la <- c2*a1*dbh^(a2)#
	return(la)#
}#
#
plot(la_tm,from=20,to=99)#
plot(la_hb,from=20,to=99,lty=2,add=TRUE)#
#
#################
# Burger data#
#
burger.ps <- read.table("/Volumes/FORHYCS/Data/Burger/Pinus_sylvestris.csv",header=TRUE,sep=";")#
plot(burger.ps$DBH,burger.ps$LA_per_tree,xlim=c(0,100))#
plot(la_hb,from=20,to=99,lty=2,add=TRUE)#
baad.dbh <- baad.ps$d.bh*100#
baad.la <- baad.ps$a.lf#
points(baad.dbh,baad.la,col="red")
dtol.nv <- c(1.81, 2.31, 1.75, 3.01, 4.23, 4.34, 3.01, 2.93, 2.73, 2.75, 2.22, 1.89, 2.48, 1.85, 2.66, 3.46, 3.04, 2.4, 2.5, 2.2, 2.85, 3.02, 4.1, 2.95, 2, 3.55, 2.11, 2.75, 2.52, 2.41)
length(dtol.nv)
dtol.lz <- c(0.37, 0.45, 0.41, 0.43, 0.4, 0.55, 0.39, 0.46, 0.42, 0.34, 0.37, 0.34, 0.37, 0.35, 0.46, 0.3, 0.46, 0.37, 0.39, 0.3, 0.41, 0.44, 0.4, 0.44, 0.39, 0.38, 0.27, 0.4, 0.4, 0.35)
length(dtol.lz)
plot(dtol.nv,dtol.lz)
dtol.bu <- c(0.19, 0.4, 0.29, 0.28, 0.25, 0.4, 0.05, 0.1, 0.15, 0.2, 0.05, 0.2, 0.05, 0.3, 0.1, 0.21, 0.2, 0.23, 0.23, 0.1, 0.23, 0.2, 0.4, 0.15, 0.15, 0.15, 0.15, 0.25, 0.2, 0.15)
length(dtol.bu)
plot(dtol.nv,dtol.bu)
plot(dtol.lz,dtol.bu)
plot(dtol.nv,dtol.bu)
plot(dtol.nv,dtol.lz)
spc.abbrv <- c("Aa","Ld","Pa","Pc","Pm","Ps","Tb","Ac","Ap","As","Ag","Ai","Av","Bp","Cb","Cs","Ca","Fs","Fe","Pn","Pt","Qp","Qu","Qr","Sa","So","Sr","Tc","Tp","Us")
text(x=dtol.nv,y=dtol.lz,labels=spc.abbrv)
text(x=(dtol.nv+0.05),y=(dtol.lz+0.1),labels=spc.abbrv)
plot(dtol.nv,dtol.lz)
text(x=(dtol.nv+0.05),y=(dtol.lz+0.1),labels=spc.abbrv)
text(x=(dtol.nv+0.05),y=(dtol.lz+0.01),labels=spc.abbrv)
plot(dtol.nv,dtol.lz)
text(x=(dtol.nv+0.05),y=(dtol.lz+0.01),labels=spc.abbrv)
plot(dtol.nv,dtol.lz)$
plot(dtol.nv,dtol.lz)
text(x=(dtol.nv+0.03),y=(dtol.lz+0.01),labels=spc.abbrv)
range(dtol.nv)
4.34-1.75
min.lz <- min(dtol.lz)#
max.lz <- max(dtol.lz)#
min.nv <- min(dtol.nv)#
max.nv <- max(dtol.nv)#
#
dtol.new <- min.lz + (max.lz-min.lz) * ((dtol.nv-min.nv)/(max.nv-min.nv))
dtol.new
round(dtol.new,2)
ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
plot.ecor <- function(ecor,mpath,max.bio,max.lai,roots,roots.rel=FALSE){#
	elvCl <- c("< 700","700 - 900","900 - 1100","1100 - 1300","1300 - 1500","1500 - 1700","1700 - 1900","1900 - 2100","> 2100")#
	expCl <- c("North-facing","South-facing")#
	spc <- c("Abies alba","Larix decidua","Picea abies","Pinus cembra","Pinus montana","Pinus sylvestris","Acer spp","Alnus spp.","Fagus sylvatica","Quercus spp.","Others")#
	spc.cols <- c("#00e2d7","#FA9619","#385723","#db4343","#f26565","#a30000","#8eed00","#bf00f9","#393c96","#34a877","#90a5a4")	#
	# Read in files#
	bio.in <-read.table(paste0(mpath,"bio_ecor_",ecor,".txt"),header=TRUE)#
	lai.in <-read.table(paste0(mpath,"lai_ecor_",ecor,".txt"),header=TRUE)#
	if(roots){sd.in <- read.table(paste0(mpath,"sd_ecor.txt"),header=TRUE)}#
	# Number of years#
	if(roots){#
	nyrs <- nrow(sd.in)#
	}else{#
		nyrs <- nrow(bio.in)#
	}#
# Aggregate biomass and LAI to groups of species#
	bio <- bio.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	bio$acer <- bio.in$Ac + bio.in$Ap + bio.in$As#
	bio$alnus <- bio.in$Ag + bio.in$Ai + bio.in$Av#
	bio$fagus <- bio.in$Fs#
	bio$quercus <- bio.in$Qp + bio.in$Qu + bio.in$Qr#
	bio$others <- bio.in$Tb + bio.in$Bp + bio.in$Cb + bio.in$Cs + bio.in$Ca + bio.in$Fe + bio.in$Pn + bio.in$Pt + bio.in$Sa + bio.in$So + bio.in$Sr + bio.in$Tc + bio.in$Tp + bio.in$Us#
	lai <- lai.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	lai$acer <- lai.in$Ac + lai.in$Ap + lai.in$As#
	lai$alnus <- lai.in$Ag + lai.in$Ai + lai.in$Av#
	lai$fagus <- lai.in$Fs#
	lai$quercus <- lai.in$Qp + lai.in$Qu + lai.in$Qr#
	lai$others <- lai.in$Tb + lai.in$Bp + lai.in$Cb + lai.in$Cs + lai.in$Ca + lai.in$Fe + lai.in$Pn + lai.in$Pt + lai.in$Sa + lai.in$So + lai.in$Sr + lai.in$Tc + lai.in$Tp + lai.in$Us#
	# Draw biomass plot#
	par(fig=c(0,0.8,0.55,0.9))#
	par(mar=c(1,3,0,0))#
	plot.stack(df=bio,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.bio,ylab="Above-ground biomass [t/ha]",xint=20,yint=50)#
	# Draw LAI plot#
	par(fig=c(0,0.8,0.2,0.55),new=TRUE)#
	par(mar=c(1,3,0,0))#
	plot.stack(df=lai,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.lai,ylab="Leaf Area Index",xint=20,yint=1)#
	if(!roots){#
			axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	mtext(side=1,text="Simulation year",line=1)#
#
	}#
	if(roots){#
	# Draw soil depth line plot#
	par(fig=c(0,0.8,0,0.2),new=TRUE)#
	par(mar=c(2,3,0,0))#
	sd <- sd.in[,paste0("X",ecor)]#
	#sd.plot <- 1000-(sd*1000)#
	if(roots.rel){#
	  plot(seq(1:nyrs),sd*1000,type="n",ylim=c(0,1000),axes=FALSE)#
	  	vlpos <- seq(0,nyrs,by=20)#
	  hlpos <- seq(0,1000,by=200)#
	  abline(v=vlpos,col="lightgrey")#
	  abline(h=hlpos,col="lightgrey")#
	  lines(seq(1:nyrs),sd*1000)#
	  axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	  axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
    	mtext(side=1,text="Simulation year",line=1)#
	  mtext(side=2,text="Rooting depth [mm]",line=2)#
	}  else {#
		plot(seq(1:nyrs),sd,type="n",ylim=c(0,200),axes=FALSE)#
	vlpos <- seq(0,nyrs,by=20)#
	hlpos <- seq(0,200,by=20)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	lines(seq(1:nyrs),sd)#
	axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	axis(side=2,at=seq(0,200,by=20),labels=seq(0,200,by=20),line=-0.5)#
	mtext(side=1,text="Simulation year",line=1)#
	mtext(side=2,text="SFC [mm]",line=2)#
	}#
	# vlpos <- seq(0,nyrs,by=20)#
	# hlpos <- seq(0,1000,by=200)#
	# abline(v=vlpos,col="lightgrey")#
	# abline(h=hlpos,col="lightgrey")#
	# lines(seq(1:nyrs),sd*1000)#
	# axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	# axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
	# mtext(side=1,text="Simulation year",line=1)#
	# mtext(side=2,text="Rooting depth [mm]",line=2)#
	}#
	# Draw species legend#
	par(fig=c(0.8,1,0.2,1),new=TRUE)#
	par(mar=c(2,0,3,1))#
	plot(1,1,xlim=c(0,1),ylim=c(0,1),type="n",axes=FALSE)#
	nspc <- length(spc)#
	spc.int <- 0.9/nspc#
	y.pos <- seq(0.05,0.95,by=spc.int)#
	# Start from bottom#
	spc <- rev(spc)#
	spc.cols <- rev(spc.cols)#
	for(i in 1:nspc){#
		rect(xleft = 0.05,ybottom=(y.pos[i]-(0.25*spc.int)),xright=0.25,ytop=(y.pos[i]+(0.25*spc.int)),col=spc.cols[i])#
		text(x=0.3,y=y.pos[i],adj=0,labels=spc[i],cex=0.75)#
	}#
	par(fig=c(0,1,0.9,1),new=TRUE)#
	# Title for whole plot#
	asp.code <- as.numeric(substr(ecor,2,2))#
	elv.code <- as.numeric(substr(ecor,3,4))#
	asp.str <- expCl[asp.code]#
	elv.str <- elvCl[elv.code]#
	mtext(text=paste0(elv.str, " m asl - ",asp.str),side=3,font=2,cex=2)#
}#
#
plot.stack <- function(df,order,cols,xlen,ylen,ylab,xint,yint){#
	plot(10,10,xlim=c(1,xlen),ylim=c(0,ylen),type="n",mgp=c(3,1,0),axes=FALSE)#
	axis(side=2,at=seq(0,ylen,by=yint),labels=seq(0,ylen,by=yint),line=-0.5)#
	mtext(side=2,text=ylab,line=2)#
	# Draw grid lines#
	vlpos <- seq(0,xlen,by=xint)#
	hlpos <- seq(0,ylen,by=yint)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	yb <- rep(0,xlen)#
	for(i in 1:length(order)){#
		yt <- yb + df[,order[i]]#
		polygon(x=c(seq(1,xlen),seq(xlen,1,-1)),y=c(yb,rev(yt)),col=cols[i])#
		yb <- yt#
	}#
}#
### Test#
ecor <- "1207"#
mpath <- "/Volumes/FORHYCS/Output/Ecoregions/full_succ4/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/full_succ5/"#
tmpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/succ_tm/"#
bio.in <- bio.in[2:nrow(bio.in),]#
sd.in <- bio.in[2:nrow(sd.in),]#
plot.order <- c("others","quercus","fagus","alnus","acer","Ps","Pm","Pc","Pe","Ld","Aa")#
plot.stack(df=bio,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=100,main="Above-ground biomass",xlab="Simulation year",ylab="Biomass [t/ha]")#
#
plot.ecor("1101",mpath,200,8)#
#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/rootslag5_2/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek2/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/dynhmax/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek_hmax/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/new_kdt/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE)#
}#
#
dev.off()#
pdf(file=paste0(tmpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],tmpath,300,8,FALSE)#
}#
#
dev.off()
spc.abbrv <- c("Aa","Ld","Pa","Pc","Pm","Ps","Tb","Ac","Ap","As","Ag","Ai","Av","Bp","Cb","Cs","Ca","Fs","Fe","Pn","Pt","Qp","Qu","Qr","Sa","So","Sr","Tc","Tp","Us")#
dtol.nv <- c(1.81, 2.31, 1.75, 3.01, 4.23, 4.34, 3.01, 2.93, 2.73, 2.75, 2.22, 1.89, 2.48, 1.85, 2.66, 3.46, 3.04, 2.4, 2.5, 2.2, 2.85, 3.02, 4.1, 2.95, 2, 3.55, 2.11, 2.75, 2.52, 2.41)#
dtol.lz <- c(0.37, 0.45, 0.41, 0.43, 0.4, 0.5, 0.39, 0.46, 0.42, 0.34, 0.37, 0.34, 0.37, 0.35, 0.46, 0.3, 0.46, 0.37, 0.39, 0.3, 0.41, 0.44, 0.4, 0.44, 0.39, 0.38, 0.27, 0.4, 0.4, 0.35)#
dtol.bu <- c(0.19, 0.4, 0.29, 0.28, 0.25, 0.4, 0.05, 0.1, 0.15, 0.2, 0.05, 0.2, 0.05, 0.3, 0.1, 0.21, 0.2, 0.23, 0.23, 0.1, 0.23, 0.2, 0.4, 0.15, 0.15, 0.15, 0.15, 0.25, 0.2, 0.15)#
#
min.lz <- min(dtol.lz)#
max.lz <- max(dtol.lz)#
min.nv <- min(dtol.nv)#
max.nv <- max(dtol.nv)#
#
dtol.new <- min.lz + (max.lz-min.lz) * ((dtol.nv-min.nv)/(max.nv-min.nv))
dtol.new
library(latex2exp)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp(paste0("$\\Sigma PT = $", ,round(ptsum.2003)," mm")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
head(sim)
# (protoFH routines from files on Hera)#
#
mpath <- "/Volumes/FORHYCS/Development/mini_forhycs/data/stations/"#
#
met <- meteoRead(mpath,"MON",na.yrs=c(1980,1981))#
temp <- met[[1]]#
prec <- met[[2]]#
rg <- met[[3]]#
rh <- met[[4]]#
wind <- met[[5]]#
snow <- met[[6]]#
rssd <- met[[7]]#
#
# Define values for surface parameters#
curlai <- 4#
curgsl <- 200#
cursfc <- 150#
curbeta <- 3#
curkappa <- 15#
currsmin <- 180#
curjvpd <- 0.025#
curtopt <- 18#
#
elv <- 1427#
#
sim <- protofh17(t=temp,p=prec,u=wind,rh=rh,rg=rg,rssd=rssd,snow=snow,sfc=cursfc,kappa=curkappa,laimax=curlai,gsLen=curgsl,elv=elv,rsmin=currsmin,cBeta=curbeta,jvpd=curjvpd,topt=curtopt)#
names(sim) <- c("year","mon","day","pt","at","pes","aes","ei","q","sm","si")#
#
sim.2003 <- sim[sim$year==2003,]#
ptsum.2003 <- sum(sim.2003$pt)#
atsum.2003 <- sum(sim.2003$at)#
ds.2003 <- 1-(sum(sim.2003$at)/sum(sim.2003$pt))#
sim.2007 <- sim[sim$year==2007,]#
ptsum.2007 <- sum(sim.2007$pt)#
atsum.2007 <- sum(sim.2007$at)#
ds.2007 <- 1-(sum(sim.2007$at)/sum(sim.2007$pt))#
#
monlen <- c(31,28,31,30,31,30,31,31,30,31,30,31)#
monlim <- c(0,cumsum(monlen))#
#
library(latex2exp)#
#
pdf(file="/Volumes/FORHYCS/Conferences/EGU2017/fig_ds.pdf",width=11,height=6)#
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp(paste0("$\\Sigma PT = $", ,round(ptsum.2003)," mm")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
dev.off()
# Auxiliary function for processing of date/time strings#
pad1 <- function(mon){#
	monc <- as.character(mon)#
	if(nchar(monc)==2){#
		monout <- monc#
	} else {#
		monout <- paste0("0",monc)#
	}#
	return(monout)#
}#
pad <- Vectorize(pad1)#
eraeroCan <- function(u2,lai,fvc,h,lw){#
##################################
# Aerodynamic resistance for canopy. Simplified after Shuttleworth-Wallace (no ra for soil is calculated).#
##
# References:#
##
# Shuttleworth, W.J. and Wallace, J.S. (1985): Evaporation from sparse crops-an energy combination theory.#
# Q. J. Roy. Meteor. Soc. 111(469): 839-855#
# 10.1002/qj.49711146910#
##
# Guan, H. and Wilson, J.L. (2009): A hybrid dual-source model for potential evaporation and transpiration partitioning.#
# J. Hydrol. 377(3-4): 405-416#
# 10.1016/j.jhydrol.2009.08.037#
##
# Iritz, Z. et al. (1999): Test of a modified Shuttleworth–Wallace estimate of boreal forest evaporation.#
# Agric. For. Meteorol. 98-99: 605-619#
# 10.1016/S0168-1923(99)00127-6#
##
# Zhou et al. (2006): Estimating potential evapotranspiration using Shuttleworth–Wallace model#
# and NOAA-AVHRR NDVI data to feed a distributed hydrological model over the Mekong River basin.#
# J. Hydrol. 317(1-2): 151-173#
# 10.1016/j.jhydrol.2005.11.013#
#
# Inputs:#
# - u2: Wind speed at 2 m above ground [m s-1]#
# - lai: Leaf Area Index [m2 m-2]#
# - fvc: Fractional tree canopy cover [m2 m-2]#
# - h: Canopy height [m]#
# - lw: Characteristic leaf width [m]#
#
# Outputs:#
# - raa: above-canopy aerodynamic resistance [s m-1]#
# - rca: within-canopy aerodynamic resistance [s m-1]#
# (below-canopy aerodynamic resistance is not calculated, as it is not needed for modeling soil evaporation in this implementation)#
#
# Set constants#
	k <- 0.4	# von Kármán's constant#
	critLai <- 4	# LAI at which canopy is considered fully closed (Shuttleworth-Wallace)#
	zmS <- 0.01		# Soil roughness length for momentum transfer [m]#
	zhS <- 0.01		# Soil roughness length for heat/water vapor transfer [m]#
	zb <- 296.97	# Height of internal boundary layer (for wind speed conversion) [m]#
	zow <- 0.005	# Assumed roughness length at weather stations [m]#
	b <- 0.01		# Proportionality constant for rca#
  # Set aerodynamic parameters as a function of canopy height (all in m)#
  	z <- h+2.0			# Reference height above canopy#
 	zm <- 0.1*h			# Roughness length for momentum transfer#
  	zh <- 0.1*zm		# Roughness length for heat/water vapor transfer#
  	d <- 0.6*h			# Zero plane displacement height#
 # Get wind at reference level (uz) and canopy level (uh)#
 # See Zhou et al. 2006, eqs. 27 and 28#
  	uz <- u2*(log(zb/zow)/log(zb/zm))*(log((z-d)/zm)/log(2/zow))#
  	uhA <- u2*(log(zb/zow)/log(zb/zm))*(log((h-d)/zm)/log(2/zow))#
  	uh <- fvc*uhA + (1-fvc)*uz#
# Above-canopy aerodynamic resistance#
  	raaF <- (log((z-d)/zm)*log((z-d)/zh))/((k^2)*uz)#
  	raaZ <- (log(z/zmS)*log(z/zhS))/((k^2)*uz) - ((log(h/zmS)*log(h/zhS))/((k^2)*uz))#
# Sub-canopy aerodynamic resistance#
	rsaF <- (log(h/zmS)*log(h/zhS))/((k^2)*uhA)#
	rsaZ <- ((log(h/zmS)*log(h/zhS))/((k^2)*uz))#
  	if(lai >= 4){  # Interpolation following Shuttleworth&Wallace#
    	raa = raaF#
    	rsa <- rsaF#
  	}else if (lai == 0){#
    	raa = raaZ#
    	rsa <- rsaZ#
  	}else{#
    	raa = 0.25*lai*raaF + 0.25*(4-lai)*raaZ#
    	rsa = 0.25*lai*rsaF + 0.25*(4-lai)*rsaZ#
    }#
# Intra-canopy aerodynamic resistance#
# See Iritz et al. 1999#
  	rca = 1/(b*sqrt(uh/lw))#
  	return(c(raa,rca,rsa))#
 }#
#==================================================================================================================#
rcJarvis2 <- function(laic,rsmin,rsmax,rg,sm,sfc,vp,vpsat,tAir,ca,pa,jR,jvpd,jsm,tl,th,topt){#
##################################
# Canopy surface resistance following Jarvis-Stewart.#
##
# References:#
##
# Stewart, J.B. (1988): Modelling surface conductance of pine forest.#
# Agric. For. Meteorol. 43:19-35#
# 10.1016/0168-1923(88)90003-2#
##
# Task Committee on Hydrology Handbook of Management Group D of ASCE (1996): Hydrology Handbook. Second edition.#
# Chapter 4: Evaporation and Transpiration. American Society of Civil Engineers, New York.#
##
# Medlyn, B. et al. (2001): Stomatal conductance of forest species after long-term exposure to elevated#
# CO2 concentration: a synthesis. New Phytologist 149(2):247-264#
# 10.1046/j.1469-8137.2001.00028.x#
##
# Medlyn, B. et al. (1999?): Meta-Analysis of Model Parameters. Chapter 4 in: Predicted Impacts of Rising#
# Carbon Dioxide and Temperature on Forests in Europe at Stand Scale. ECOCRAFT Final Report#
#
# Inputs:#
# - laic: clumped LAI#
# - rsmin: minimum surface resistance#
# - rg: global radiation [W m-2]#
# - sm: plant available soil moisture [mm]#
# - sfc: size of plant available soil moisture reservoir [mm]#
# - vp: Vapor pressure [hPa]#
# - vpsat: Saturated vapor pressure [hPa]#
# - tAir: Air temperature [°C]#
# - ca:#
# - pa: Control parameter indicating whether rc for potential (pa==1) or actual transpiration (pa==2) should be calculated#
# - land: land cover type (3: coniferous forest; 4: broadleaved forest; 5: mixed forest)#
#
# Output:#
# - rs: Canopy resistance [s m-1]#
#
# Set constants (Jarvis-Stewart parameters)#
	# jR <- 100#
	# rsmax <- 5000#
	# jv1 <- 0.05#
	# jv2 <- 15#
	# jsm <- 6.7#
	# tl <- 0#
	# topt <- 18#
	# th <- 40#
# 1st reduction function: global radiation#
  	f1 <- (1000/(1000+jR)) * ((rg+jR)/rg)#
# 2nd reduction function: Air temperature#
  	if(tAir <= tl){#
    	f2 <- 20  # ~ the value it would take with tAir==tl in Stewart parameterization (tl = 0)#
  	}else if(tAir >= th){#
  		f2 <- 20#
  	}else{#
    	a <- (th-topt)/(topt-tl)#
    	f2 <- 1/(((tAir-tl)*((th-tAir)^a))/((topt-tl)*((th-topt)^a)))#
  	}#
#
# 3rd reduction function: vapor pressure deficit#
  	if (pa==1){#
    	f3 <- 1#
  	}else{#
    	vpd <- vpsat-vp#
    	# if(vpd < jv2){#
      		# f3 <- 1/(1-(vpd*jv1))#
    	# }else{#
      		# f3 <- 1/(1-(jv2*jv1))#
      	# }#
      	gvpd <- max(0.001,(1-(jvpd*vpd)))#
      	f3 <- 1/gvpd#
	}#
	# 4th reduction function: soil moisture#
  	if(pa==1){#
    	f4 <- 1#
  	}else{#
    	#f4 <- 1/(1-exp(-jsm*(sm/sfc)))#
    	if(sm/sfc >= jsm){#
    		f4 <- 1	# No stress above REWc#
    	} else {#
    		f4 <- 1/(sm/(jsm*sfc))#
    	}#
    }#
# 5th reduction function: CO2 concentration.#
# Values for conifers and broadleaves from Medlyn et al. (ECOCRAFT report).#
# For mixed forests and other land cover types, jC is the average of the values for conifers and broadleaves.#
  	# if (land == 3){#
      	# jC <- 0.1#
  	# }else if (land == 4){#
      	# jC <- 0.25#
  	# }else{#
      	# jC <- 0.18#
    # }#
#
  	# f5 <- 1/(1-jC*((min(ca,700.)/350.)-1))#
  	f5 <- 1#
   	rs <- (rsmin/laic) * (f1*f2*f3*f4*f5)#
  	rs <- max(rs,rsmin/laic)#
  	rs <- min(rs,rsmax)#
  	return(rs)#
}#
 #==================================================================================================================#
#
#==================================================================================================================#
protofh17 <- function(t,p,u,rh,rg,rssd,snow,sfc,kappa,laimax,gsLen,elv,cBeta,rsmin,jvpd,topt){#
	# Second version#
	# - More free parameters (to be used in Morris screening)#
	# - FVC connected to LAI through parameter FF#
	# Changes with regard to version 4 (version 5 was just a test with fixed SIMAX and the model was unchanged for version 6):#
	# - SIMAX multiplied with FVC to account for potentially sparse forests#
	# - Canopy transpiration response to REW modified - linear reduction below REWc instead of exponential formulation (jsm here is REWc)#
	# Version 8: no changes WRT Version 7 - only meteo routine#
	# Version 9: back to 19 varying parameters (including rsmax and jR), for new Morris analysis#
	# Version 12: Corrected formulation for soil evap, following Morillas et al. (2013)#
	# Version 13: Version 12 adapted for 3000 runs (instead of Morris)#
	# Version 14: Fully dynamic simulations with basic snow routine (adapted from HBV light)#
	# Version 15: Same as 14, but for 3000 runs#
	# Version 17: Same as 15, but with fixed falues for:#
	# -FF#
	# -zV#
	# -kSimax#
	# -rsmax#
	# -jR#
	# -jSM#
	# -Tmin#
	# -Tmax#
	# -albedo#
	# -lw#
	# -kl#
	laimin <- 0.2#
	vfmin <- 0.2#
	### Set constants#
	cp <- 1004#
	at <- 0.95#
	sigma <- 5.6703E-8#
	a <- 3600000#
	zeroK <- 273.15#
	hundredK <- 373.15#
	pZero <- 1013.25#
	gammaT <- 0.005#
	g <- 9.81#
	rAir <- 287.04#
	rWat <- 461.5#
	rhoWat <- 999.941#
	H <- c(13.3185,-1.976,-0.6445,-0.1299)#
	pp <- c(-137.0, -75.0,  30.0, 167.0, 236.0, 252.0, 213.0,  69.0, -85.0,-206.0,-256.0,-206.0)#
	#extCoeff <- 0.5#
	# Fixed parameter values#
	ff <- 0.386#
	z <- 25#
	ksimax <- 2#
	jsm <- 0.4#
	tl <- 0#
	th <- 40#
	extCoeff <- 0.5	# kl#
	jR <- 100#
	rsmax <- 5000#
	alb <- 0.1#
	lw <- 0.01#
	# Parameters for minimal(!) snow model#
	tt <- 0#
	cfmax <- 0.125#
	scf <- 0.9#
	cwh <- 0.05#
	cfr <- 0.05#
	### Prepare vectors for output#
	ndays <- length(rssd$year)#
	pt <- vector("numeric",ndays)#
	at <- vector("numeric",ndays)#
	pes <- vector("numeric",ndays)#
	aes <- vector("numeric",ndays)#
	ei <- vector("numeric",ndays)#
	smV <- vector("numeric",ndays)#
	siV <- vector("numeric",ndays)#
	qV <- vector("numeric",ndays)#
	rgV <- vector("numeric",ndays)#
	rnV <- vector("numeric",ndays)#
	snowV <- vector("numeric",ndays)#
	### Initialization#
	sm <- sfc#
	si <- 0#
	sso <- 0#
	sliq <- 0#
	ndrydays <- 0#
	hourcount <- 1#
	p16 <- rep(1,16)#
	e16 <- rep(1,16)#
	flp <- 1#
	# Calculation of phenology dates#
	center <- 218#
	doyBB <- round(center-(gsLen/2))#
	doySen <- round(center+(gsLen/2))#
	doyMax <- doyBB+20#
	doyFall <- doySen + 20#
	#print(c(doyBB, doySen,doyMax,doyFall))#
	### Daily loop#
	for(iday in 1:ndays){#
#
	# Reset soil moisture content at the beginning of each year#
	# (not necessarily realistic, but )#
	# if(snow$day[iday]==1 & snow$mon[iday] == 1){#
		# sm <- sfc#
	# }#
#
	## Check if snow is present (in this case, PT=AT=0)#
	# if(snow$snow[iday] > 0){#
		# pt[iday] <- 0#
		# at[iday] <- 0#
		# pes[iday] <- 0#
		# aes[iday] <- 0#
		# ei[iday] <- 0#
		# qV[iday] <- 0#
		# smV[iday] <- sfc#
		# siV[iday] <- 0#
		# #rgV[iday] <- 0 #
		# #rnV[iday] <- 0#
		# hourcount <- hourcount + 24#
	# } else {#
		doy <- as.numeric((strftime(as.Date(paste(pad(rssd$mon[iday]),pad(rssd$day[iday]),rssd$year[iday],sep="/"),format="%m/%d/%Y"),format="%j"))) #
	## Daily leaf phenology(simplified)#
	   # lai <- laimin#
	  	if(doy >= doyMax & doy <= doySen){#
	  		lai <- laimax#
	  		#vfrac <- vfmax#
	  	} else if(doy <= doyBB | doy >= doyFall){#
	  		lai <- laimin#
	  		#vfrac <- vfmin#
	  	} else if(doy > doyBB & doy < doyMax){#
	  		lai <- laimin + ((laimax-laimin)/(doyMax-doyBB))*(doy-doyBB)#
	  		#vfrac <- vfmin + ((vfmax-vfmin)/(doyMax-doyBB))*(doy-doyBB)#
	  	} else if(doy > doySen & doy < doyFall){#
	  		lai <- laimax + ((laimin-laimax)/(doyFall-doySen))*(doy-doySen)#
	  		#vfrac <- vfmax + ((vfmin-vfmax)/(doyFall-doySen))*(doy-doySen)#
	  	}#
	  	vfrac <- min(1,(ff+(lai*0.054)))#
	  	vfrac <- max(vfmin,vfrac)#
		#print(c(rssd$day[iday],rssd$mon[iday],rssd$year[iday],lai,vfrac))#
		#Size of interception storage#
		simax <- (ksimax*log10(1+lai))#*vfrac#
		ssd <- rssd$rssd[iday]#
		#print(paste0("iday: ", iday, " ", rssd$day[iday],"/",rssd$mon[iday],"/",rssd$year[iday]," RSSD: ", ssd))#
		siTemp <- vector("numeric",24)#
		smTemp <- vector("numeric",24)#
		cumulrain <- 0#
		ptDay <- 0#
		atDay <- 0#
		pesDay <- 0#
		aesDay <- 0#
		eiDay <- 0#
		qDay <- 0#
		#rgDay <- 0#
		#rnDay <- 0#
	  	for(hour in 1:24){#
	### Hourly loop#
			ta <- t$t[hourcount]#
			prc <- p$p[hourcount]#
			u2 <- max(0.01,u$u[hourcount])#
			h <- rh$h[hourcount]#
			rglob <- rg$r[hourcount]#
			if(hour==1){#
				siH <- siV[iday-1]#
				smH <- smV[iday-1]#
			} else{#
				siH <- siTemp[hour-1]#
				smH <- smTemp[hour-1]#
			}#
			if(iday==1 & hour==1){#
				siH <- 0#
				smH <- sfc#
			}#
	#print(c(ta,prc,u2,h,rglob))	#
	## Basic snow routine (HBV light) - snow accumulation#
	if(ta < tt){#
		sso <- sso + (prc*scf)#
		prl <- 0#
		print(c("Snow!", iday))#
	}#
	if((sso >= 5) | (ta<tt)) {#
		# Snowpack is present - no other source of evaporation/transpiration#
		peTrans <- 0#
		aTrans <- 0#
		peInt <- 0#
		aeSoil <- 0#
		peSoil <- 0#
		if(ta >= tt){#
			# Temperature above snow threshold - melt#
			m <- min(sso,(cfmax*(ta-tt)))#
			sso <- sso-m#
			sliq <- sliq + m + prc#
			sliq.out <- max(0,(sliq-(cwh*sso)))#
			sliq <- sliq-sliq.out#
			prl <- sliq.out#
		} else {#
			# Temperature below snow threshold - refreezing#
			refr <- min(sliq,(cfr*cfmax*(tt-ta)))#
			sliq <- sliq-refr#
			sso <- sso+refr#
		}#
	} else {#
		# No snow - actual model core#
		sso <- 0#
		sliq <- 0#
	## Auxiliary calculations for evaporation - get current and saturated water vapor pressure#
    # as well as delta and gamma parameters for the Penman-Monteith equation#
      		tk <- ta + zeroK#
      		tr <- 1-(hundredK/tk)#
      		tp <- tk+gammaT*elv/2#
      		PT <- pZero * exp(-g*elv/rAir/tp)#
      		l <- 2500800*(zeroK/tk)#
      		gamma <- PT*cp/l/(rAir/rWat)#
      		rhoAir <- 100*PT/rAir/tk#
      		x<-0#
      		dx<-0#
      		for (iter in 1:4){#
        		x <- x + H[iter] * tr^iter#
        		dx <- dx + iter * H[iter] * tr^(iter-1)#
      		}#
      		elx <- pZero * exp(x)#
      		del <- hundredK*elx/tk/tk*dx#
      		el <- elx*h#
      		#print(c(tk,tr,tp,pt,l,gamma,rhoAir,x,dx))#
	## Parameterization of SW/LW radiation#
			rs <- rglob*(1-alb)#
			rl <- -sigma*((ta+zeroK)^4.)*(0.52-(0.065*sqrt(el)))* (0.23+(0.77*ssd))  # Schulla 1997#
			Rn <- rs+rl#
			ANet <- max(Rn,0)#
			ACan <- ANet*(1.0-exp(-extCoeff*lai))#
			ASoil <- ANet*exp(-extCoeff*lai)#
			#rgDay <- rgDay + (rglob/24)#
			#rnDay <- rnDay + (Rn/24)#
			#print(c(doy,rssd$year[iday],ANet,lai,ACan,ASoil))#
    ## Aerodynamic resistance#
    #print(c(u2,lai,vfrac,z,lw))#
    		raero <- eraeroCan(u2,lai,vfrac,z,lw)#
    		raa <- raero[1]#
    		rca <- raero[2]#
    		rsa <- raero[3]#
    		ra <- raa+rca#
	## Surface resistance#
			laic <- lai/vfrac#
			#print(paste0("topt",topt))#
			rcPot <- rcJarvis2(laic=laic,rsmin=rsmin,rsmax=rsmax,rg=rglob,sm=smH,sfc=sfc,vp=el,vpsat=elx,tAir=ta,ca=350,pa=1,jR=jR,jvpd=jvpd,jsm=jsm,tl=tl,th=th,topt=topt)#
			rcAct <- rcJarvis2(laic=laic,rsmin=rsmin,rsmax=rsmax,rg=rglob,sm=smH,sfc=sfc,vp=el,vpsat=elx,tAir=ta,ca=350,pa=2,jR=jR,jvpd=jvpd,jsm=jsm,tl=tl,th=th,topt=topt)#
			#print(c("a",smH,el,elx,ta,jR,jvpd,jsm,tl,topt,th))#
			#print(c("b",rglob,el,elx,ta,laic))#
	#print(c("siH",siH))#
	## Interception filling#
      		SIold <- siH#
      		if(simax < 0.1){#
        		siH <- SIold + prc*0.8#
        		if( siH >= simax){#
          			siH <- simax#
          			prl <- prc-(simax-SIold)#
        		}else{#
          			prl <- prc-prc*0.8#
          		}#
      		}else{#
        		siH <- SIold + (simax-SIold)*(1-exp(-1/simax*prc))#
        		#print(c("siH", siH))#
        		#print(c("SIold",SIold))#
        		#print(c("simax",simax))#
        		#print(c("prc",prc))#
        		if( siH >= simax){#
          			siH <- simax#
          			prl <- prc-(simax-SIold)#
        		}else{#
          			prl <- prc - (simax-SIold)*(1-exp(-1/simax*prc))#
        		}#
        	}#
# Wet fraction of foliage#
      		if(siH == 0){#
        		wetFrac = 0#
      		}else{#
        		wetFrac = min(1.0,(siH/simax)^0.6666)#
      		}#
      		cumulrain <- cumulrain + prl#
      		if(cumulrain > 0.5){ndrydays <- 0}#
	## Interception evaporation#
			num <- del*ACan + vfrac*rhoAir*cp*(elx-el) / ra#
			denom <- del+gamma  # No surface resistance here#
			#energy <- min(num/denom,ANet)#
			energy <- num/denom#
        	peiZero <- (energy * a/rhoWat/l) * wetFrac#
        	peInt <- max(0.0,min(siH,peiZero))#
        	siH <- siH-peInt#
        # Calculate energy used for interception evaporation#
        	AInt <- peInt * (rhoWat*l)/a#
        	ACan <- max(0.0, ACan - AInt)#
	## Potential and actual transpiration#
        	num <- del*(max(0.0,ACan)) + vfrac*rhoAir*cp*(elx-el) / ra#
        	denom <- del + gamma * (1.0 + rcPot/ra)#
        	#energy <- min(num/denom,ACan)#
        	energy <- num/denom#
        	peTrans <- energy * a/rhoWat/l * (1.0-wetFrac)#
        	peTrans <- max(0.0,peTrans)	#
#
        	num <- del*(max(0.0,ACan)) + vfrac*rhoAir*cp*(elx-el) / ra#
        	denom <- del + gamma * (1.0 + rcAct/ra)#
        	#energy <- min(num/denom,ACan)#
        	energy <- num/denom#
        	aTrans <- energy * a/rhoWat/l * (1.0-wetFrac)#
        	aTrans <- max(0.0,aTrans)	#
        	#print(c(ACan,vfrac,ra,rcPot,rcAct,wetFrac))#
	## Soil evap#
			# peSoil <- (del*(0.8*ASoil)/(del+gamma)) * a/rhoWat/l#
			# aeSoil <- ((del*(0.8*ASoil)/(del+gamma)) * exp(-ndrydays/kappa)) * a/rhoWat/l#
			#print(c("del",del))#
			#print(c("gamma",gamma))#
			#print(c("ndrydays",ndrydays))#
			#print(c("kappa",kappa))#
			# Update state variables#
			if(hour==1){#
				p16[2:16] <- p16[1:15]#
				e16[2:16] <- e16[1:15]#
				p16[1] <- 0#
				e16[1] <- 0#
			}#
			ra <- raa + rsa#
			ASoil <- 0.7*ASoil	# 30% of ASoil go to ground heat flux#
			num <- del*max(0.0,ASoil) + (1-vfrac)*rhoAir*cp*(elx-el) / ra#
			denom <- del + gamma#
			energy <- num/denom#
			peSoil <- energy * a/rhoWat/l#
			if(cumulrain <= 0.5){#
				aeSoil <- peSoil *flp* exp(-ndrydays/kappa)#
			} else {#
				fZhang <- min(1,(sum(p16)/sum(e16)))#
				aeSoil <- peSoil * fZhang#
			}#
			p16[1] <- p16[1] + prl#
			e16[1] <- e16[1] + peSoil#
			}  # Snow / no snow (with basic snow routine)#
	## Soil moisture refilling/depletion#
      		IM <- max(3,((prl*10)/30)+1.5)#
      		ts <- 1/IM#
      		sme <- smH#
      		eSoil <- 0#
      		eTrans <- 0#
      		q <- 0  # Runoff#
      		prl <- prl*ts#
      		#print(c("T,Esoil",aTrans,aeSoil))#
      		#print(c("sem,smH",sme,smH))#
      		#print(paste("sfc",sfc))#
      		for (tstep in 1:IM){#
				#print(c("sme",sme))#
        		esIter <- aeSoil*ts#
        		etIter <- aTrans*ts#
        		dsuzIter <- prl*((sme/sfc)^cBeta)#
        		#print(c("etIter",etIter))#
        		#print(c("esIter",esIter))#
        		#print(c("prl",prl))#
        		#print(c("dsuzIter",dsuzIter))#
        		sme <- sme - etIter - esIter + (prl-dsuzIter)#
        		#print(c(sme,etIter,esIter,prl,dsuzIter))#
        		if( sme > sfc){#
        			dsuzIter = dsuzIter + (sme-sfc)#
          			sme <- sfc#
          		}#
        		if( sme < 0){#
          			etIter <- etIter + esIter + sme#
          			esIter <- 0.0#
          			sme <- 0.0#
          		}#
        		eSoil = eSoil + esIter#
        		eTrans = eTrans + etIter#
        		#print("dsuzIter",dsuzIter)#
        		q = q + dsuzIter#
      		}  # End of sub-hourly iteration #
      		smTemp[hour] <- sme#
      		siTemp[hour] <- siH     	#
      		ptDay <- ptDay + peTrans#
      		atDay <- atDay + eTrans#
      		pesDay <- pesDay + peSoil#
      		aesDay <- aesDay + aeSoil#
      		eiDay <- eiDay + peInt#
      		qDay <- qDay + q	#
			hourcount <- hourcount+1#
		} # Hour#
		if(cumulrain <= 0.5){#
			ndrydays <- ndrydays + 1#
		} else{#
			ndrydays <- 0#
			flp <- fZhang#
		}#
		pt[iday] <- ptDay#
		at[iday] <- atDay#
		pes[iday] <- pesDay#
		aes[iday] <- aesDay#
		ei[iday] <- eiDay#
		qV[iday] <- qDay#
		smV[iday] <- sme#
		siV[iday] <- siH#
		snowV[iday] <- sso#
		#rgV[iday] <- rgDay#
		#rnV[iday] <- rnDay#
	#} # Snow or not#
	} # iday#
	# year <- snow$year#
	# mon <- snow$mon#
	# day <- snow$day#
	out <- data.frame(snow$year,snow$mon,snow$day,pt,at,pes,aes,ei,qV,smV,siV,snowV)#
	return(out)#
}#
#
 #==================================================================================================================#
 meteoRead <- function(mpath,stat,na.yrs=0){#
 	## Hourly data#
 	#print(na.yrs)#
 	#na.yrs <- c(1980,1981) # For Zermatt, make it station-dependent later#
	temp <- read.table(paste0(mpath,"proto_",stat,"_temp.txt"),skip=8,header=TRUE)#
	tempold <- read.table(paste0(mpath,"tmp_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	temp <- rbind(tempold,temp)#
	names(temp) <- c("station","year","mon","day","hour","min","t")#
	temp$t[temp$t==32767] <- NA#
	# Remove records from years with no data#
	which.na <- which(temp$year %in% na.yrs)#
	temp <- temp[-which.na,]#
	# Quick fix for missing values: mean of temperatures of previous and next hour#
	naind <- which(is.na(temp$t))#
	if(length(naind) > 0){print(c("NA cells for temperature: ", length(naind), " out of ", length(temp$year)))}#
	#temp$t[naind] <- (temp$t[naind-1]+temp$t[naind+1])/2#
	temp$t[naind] <- mean(temp$t,na.rm=TRUE)#
	# Shift values (UTC -> CET)#
	temp$t[2:length(temp$t)] <- temp$t[1:(length(temp$t)-1)]#
	prec <- read.table(paste0(mpath,"proto_",stat,"_prec.txt"),skip=8,header=TRUE)#
	precold <- read.table(paste0(mpath,"prec_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	prec <- rbind(precold,prec)#
	names(prec) <- c("station","year","mon","day","hour","min","p")#
	prec$p[prec$p==32767] <- NA#
	# Remove records from years with no data#
	which.na <- which(prec$year %in% na.yrs)#
	prec <- prec[-which.na,]#
	# Quick fix for missing values: mean of prec sums of previous and next hour#
	naind <- which(is.na(prec$p))#
	if(length(naind) > 0){print(c("NA cells for precip: ", length(naind), " out of ", length(temp$year)))}#
	#prec$p[naind] <- (prec$p[naind-1]+prec$p[naind+1])/2#
	prec$p[naind] <- 0#
	# Shift values (UTC -> CET)#
	prec$p[2:length(prec$p)] <- prec$p[1:(length(prec$p)-1)]#
	rg <- read.table(paste0(mpath,"proto_",stat,"_rg.txt"),skip=8,header=TRUE)#
	rgold <- read.table(paste0(mpath,"rg_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	rg <- rbind(rgold,rg)#
	names(rg) <- c("station","year","mon","day","hour","min","r")#
	rg$r[rg$r==32767] <- NA#
	# Remove records from years with no data#
	which.na <- which(rg$year %in% na.yrs)#
	rg <- rg[-which.na,]#
	# Quick fix for missing values: mean of global radiation of previous and next hour#
	naind <- which(is.na(rg$r))#
	if(length(naind) > 0){print(c("NA cells for radiation: ", length(naind), " out of ", length(temp$year)))}#
	#rg$r[naind] <- (rg$r[naind-1]+rg$r[naind+1])/2#
	rg$r[naind] <- 0#
	# Shift values (UTC -> CET)#
	rg$r[2:length(rg$r)] <- rg$r[1:(length(rg$r)-1)]#
	rh <- read.table(paste0(mpath,"proto_",stat,"_rh.txt"),skip=8,header=TRUE)#
	rhold <- read.table(paste0(mpath,"rh_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	rh <- rbind(rhold,rh)#
	names(rh) <- c("station","year","mon","day","hour","min","h")#
	rh$h[rh$h==32767] <- NA#
	# Remove records from years with no data#
	which.na <- which(rh$year %in% na.yrs)#
	rh <- rh[-which.na,]#
	# Quick fix for missing values: mean of RH of previous and next hour#
	naind <- which(is.na(rh$h))#
	if(length(naind) > 0){print(c("NA cells for RH: ", length(naind), " out of ", length(temp$year)))}#
	#rh$h[naind] <- (rh$h[naind-1]+rh$h[naind+1])/2#
	rh$h[naind] <- mean(rh$h,na.rm=TRUE)#
	rh$h <- rh$h*0.01#
	# Shift values (UTC -> CET)#
	rh$h[2:length(rh$h)] <- rh$h[1:(length(rh$h)-1)]#
	wind <- read.table(paste0(mpath,"proto_",stat,"_wind.txt"),skip=8,header=TRUE)#
	windold <- read.table(paste0(mpath,"wind_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	wind <- rbind(windold,wind)#
	names(wind) <- c("station","year","mon","day","hour","min","u")#
	wind$u[wind$u==32767] <- NA#
	# Remove records from years with no data#
	which.na <- which(wind$year %in% na.yrs)#
	wind <- wind[-which.na,]#
	# Quick fix for missing values: average over whole period#
	naind <- which(is.na(wind$u))#
	if(length(naind) > 0){print(c("NA cells for wind: ", length(naind), " out of ", length(temp$year)))}#
	wind$u[naind] <- mean(wind$u,na.rm=TRUE)#
	# Shift values (UTC -> CET)#
	wind$u[2:length(wind$u)] <- wind$u[1:(length(wind$u)-1)]#
	## Daily data#
	snow <- read.table(paste0(mpath,"proto_",stat,"_snow.txt"),skip=8,header=TRUE)#
	snowold <- read.table(paste0(mpath,"snow_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	names(snow) <- c("station","year","mon","day","hour","min","snow")	# Variable in Snow may have a different ID (automatic/manual measurements). Therefore assign names before merging#
	names(snowold) <- c("station","year","mon","day","hour","min","snow")#
	snow <- rbind(snowold,snow)#
#
	snow$snow[snow$snow==32767] <- NA#
	# Remove records from years with no data#
	which.na <- which(snow$year %in% na.yrs)#
	snow <- snow[-which.na,]#
	snow$snow[is.na(snow$snow) & (snow$mon >= 4 & snow$mon <= 10)] <- 0#
	snow$snow[is.na(snow$snow) & (snow$mon < 4 | snow$mon > 10)] <- 1#
	rssd <- read.table(paste0(mpath,"proto_",stat,"_rssd.txt"),skip=8,header=TRUE)#
	rssdold <- read.table(paste0(mpath,"rssd_",stat,"_80_99.txt"),skip=8,header=TRUE)#
	rssd <- rbind(rssdold,rssd)#
	names(rssd) <- c("station","year","mon","day","hour","min","rssd")#
	# Remove records from years with no data#
	which.na <- which(rssd$year %in% na.yrs)#
	rssd <- rssd[-which.na,]#
	rssd$rssd[rssd$rssd==32767] <- NA#
	rssd$rssd[rssd$rssd > 100] <- 100#
	rssd$rssd <- rssd$rssd * 0.01#
	rssd$rssd[is.na(rssd$rssd)] <- 50#
	outlist <- list(temp,prec,rg,rh,wind,snow,rssd)#
	return(outlist)#
}#
 #==================================================================================================================
# (protoFH routines from files on Hera)#
#
mpath <- "/Volumes/FORHYCS/Development/mini_forhycs/data/stations/"#
#
met <- meteoRead(mpath,"MON",na.yrs=c(1980,1981))#
temp <- met[[1]]#
prec <- met[[2]]#
rg <- met[[3]]#
rh <- met[[4]]#
wind <- met[[5]]#
snow <- met[[6]]#
rssd <- met[[7]]#
#
# Define values for surface parameters#
curlai <- 4#
curgsl <- 200#
cursfc <- 150#
curbeta <- 3#
curkappa <- 15#
currsmin <- 180#
curjvpd <- 0.025#
curtopt <- 18#
#
elv <- 1427#
#
sim <- protofh17(t=temp,p=prec,u=wind,rh=rh,rg=rg,rssd=rssd,snow=snow,sfc=cursfc,kappa=curkappa,laimax=curlai,gsLen=curgsl,elv=elv,rsmin=currsmin,cBeta=curbeta,jvpd=curjvpd,topt=curtopt)#
names(sim) <- c("year","mon","day","pt","at","pes","aes","ei","q","sm","si")#
#
sim.2003 <- sim[sim$year==2003,]#
ptsum.2003 <- sum(sim.2003$pt)#
atsum.2003 <- sum(sim.2003$at)#
ds.2003 <- 1-(sum(sim.2003$at)/sum(sim.2003$pt))#
sim.2007 <- sim[sim$year==2007,]#
ptsum.2007 <- sum(sim.2007$pt)#
atsum.2007 <- sum(sim.2007$at)#
ds.2007 <- 1-(sum(sim.2007$at)/sum(sim.2007$pt))#
#
monlen <- c(31,28,31,30,31,30,31,31,30,31,30,31)#
monlim <- c(0,cumsum(monlen))
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp(paste0("$\\Sigma PT = $", ,round(ptsum.2003)," mm")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
traceback()
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp(paste0("$\\Sigma PT = $", round(ptsum.2003)," mm")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp(paste0("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$") #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= expression(paste0(Sigma, "PT " = round(ptsum.2003), " mm")),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
ptsum.2003 <- round(sum(sim.2003$pt))#
atsum.2003 <- round(sum(sim.2003$at))#
ds.2003 <- round(1-(sum(sim.2003$at)/sum(sim.2003$pt)),2)
ptsum.2003
ds.2003
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma, "PT " = .(ptsum.2003), " mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma "PT " = .(ptsum.2003) " mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
text(x=10,y=6,labels= bquote(Sigma .("PT ")= .(ptsum.2003) .(" mm")),adj=0,cex=2)
traceback()
text(x=10,y=6,labels= bquote(Sigma .("PT =") .(ptsum.2003) .(" mm")),adj=0,cex=2)
text(x=10,y=6,labels= bquote(Sigma "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels=paste0("AT = ",round(atsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=20,y=6,labels=paste0("PT = ",round(ptsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=4,labels=paste0("AT = ",round(atsum.2007)," mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
ptsum.2007 <- round(sum(sim.2007$pt))#
atsum.2007 <- round(sum(sim.2007$at))#
ds.2007 <- round(1-(sum(sim.2007$at)/sum(sim.2007$pt)),2)
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2007) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2007) ~ " mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)
pdf(file="/Volumes/FORHYCS/Conferences/EGU2017/fig_ds.pdf",width=11,height=6)#
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2007) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2007) ~ " mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("Tpot","Tact"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
dev.off()
pdf(file="/Volumes/FORHYCS/Conferences/EGU2017/fig_ds.pdf",width=11,height=6)#
par(mfrow=c(2,1))#
par(mar=c(4.1,4.1,3.1,1.1))#
plot(sim.2003$pt,type="n",xlab="",ylab="", main="Dry year (2003)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
#mtext(side=1,text="DOY",line=2,cex=1.5)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
#mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2003$pt,col="black",lwd=3)#
lines(sim.2003$at,col="firebrick1",lwd=3)#
#rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
#text(x=10,y=6,labels= latex2exp("$\\Sigma PT = 666 mm$")) #paste0("PT = ",round(ptsum.2003)," mm"),adj=0,cex=2)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2003) ~ " mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2003,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
plot(sim.2007$pt,type="n",xlab="",ylab="", main="Humid year (2007)",cex.main=2,ylim=c(0,8),axes=FALSE)#
axis(side=1,cex.axis=2,mgp=c(2,0.75,0),at=c(0,100,200,300,365))#
mtext(side=1,text="DOY",line=2.5,cex=2)#
axis(side=2,cex.axis=2,at=c(0,2,4,6,8),mgp=c(2,0.5,0),las=1)#
mtext(side=2,text="Transpiration [mm/day]",line=2,cex=2,at=12)#
abline(v=monlim,col="lightgrey",lwd=1.5)#
lines(sim.2007$pt,col="black",lwd=3)#
lines(sim.2007$at,col="firebrick1",lwd=3)#
#rect(xleft=20,ybottom=1.5,xright=80,ytop=6.5,col="white",border=NA)#
text(x=10,y=6,labels= bquote(Sigma * "PT =" ~ .(ptsum.2007) ~ " mm"),adj=0,cex=2)#
text(x=10,y=4,labels= bquote(Sigma * "AT =" ~ .(atsum.2007) ~ " mm"),adj=0,cex=2)#
text(x=20,y=2,labels=paste0("DI = ",round(ds.2007,2)),adj=0,cex=2)#
legend("topright",legend=c("PT","AT"),lwd=c(3,3),col=c("black","firebrick1"),bg="white",cex=2,box.lwd=0)#
dev.off()
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/new_kdt_remund/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,FALSE)#
}#
#
dev.off()
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE,TRUE)#
}#
#
dev.off()
arg <- function(h,hmax){#
	# Auxiliary function for DBH-height allometry#
	rv <- pmin(1,pmax(0,(1-(h-1.37)/(hmax-1.37))))#
	return(rv)#
}#
#
######################################
#
inpath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_out/dist/"#
outpath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_dbh/"#
#
hcls <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
khmax <- c(60,44,50,26,27,45,22,23,32,42,31,22,6,29,27,33,10,45,42,36,30,45,25,52,27,22,19,30,39,43)						# Species-specific max height [m]#
kdmax <- c(187,100,180,165,95,99,55,55,99,110,110,110,25,121,99,198,22,154,154,220,110,110,66,143,220,66,66,110,110,143)	# Species-specific max diameter [cm]#
hmin <- 1.37	# "Minimum" height [m]								#
#
#years <- 1971:2015											#
years <- 1535:1549#
#
# List of all input file#
files.in <- list.files(inpath,full.names=TRUE)	# Full paths#
fils.in <- list.files(inpath,full.names=FALSE)	# File names only#
#
# Remove files that do not cover the selected years and/or ecoregions#
nchfiles <- nchar(files.in[2])  # Second element of files.in because 1st element (file name) had a different structure#
#files.in <- files.in[substr(files.in,(nchfiles-7),(nchfiles-4)) %in% years & substr(files.in,(nchfiles-12),(nchfiles-12)) == 1]#
files.in <- files.in[substr(files.in,(nchfiles-7),(nchfiles-4)) %in% years]#
nchfils <- nchar(fils.in[2])#
#fils.in <- fils.in[substr(fils.in,(nchfils-7),(nchfils-4)) %in% years & substr(fils.in,(nchfils-12),(nchfils-12)) == 1]#
fils.in <- fils.in[substr(fils.in,(nchfils-7),(nchfils-4)) %in% years]#
#
for(file in 1:length(files.in)){#
	# Read in file for the current year#
	height.in <- read.table(files.in[file],header=TRUE)#
	year <- substr(fils.in[file],(nchfils-7),(nchfils-4))#
	#ecor <- substr(fils.in[file],(nchfils-12),(nchfils-9))#
	ecor <- substr(fils.in[file],(nchfils-15),(nchfils-9))#
	# Convert from trees/plot to trees/ha#
	plotsize <- 833#
	height.in[,2:17] <- height.in[,2:17] * (10000/833)#
	# Make a look-up table for DBH - each row/column value contains the DBH of the corresponding species/height class  #
	dbh <- height.in#
	dbh[,2:17] <- 0#
	# This data.frame will contain the number of trees per species and DBH class#
	dbh.table <- data.frame(spc = numeric(0), dbh=numeric(0), count=numeric(0))#
	for(i in 1:30){#
		# The next 2 lines calculate the DBH corresponding to each height class for each species#
		args <- arg(hcls,khmax[i])#
		dbh[i,2:17] <- (kdmax[i] * (1-sqrt(args))) + 1.27#
		# Retrieve number of trees per species and DBH class. If there are trees in a class, a new line is added to the output data.frame.#
		rec <- vector("numeric",3)#
		for(j in 1:15){#
			column <- j+2#
			if(height.in[i,column] > 0){#
				rec[1] <- i#
				rec[2] <- dbh[i,column]#
				rec[3] <- height.in[i,column]#
				dbh.table <- rbind(dbh.table,rec)#
			}#
		}#
	}#
	names(dbh.table) <- c("spc","dbh","count")#
	options(scipen=20)	# Prevent output in scientific notation#
	write.table(format(dbh.table,digits=2),paste0("/Volumes/FORHYCS/Projects/Eco/sample_output/ecor_dbh/sample_",ecor,"_",year,"_dbh.txt"),row.names=FALSE,quote=FALSE)#
#
}
traceback()
file
i
j
ecor
year
arg <- function(h,hmax){#
	# Auxiliary function for DBH-height allometry#
	rv <- pmin(1,pmax(0,(1-(h-1.37)/(hmax-1.37))))#
	return(rv)#
}#
#
######################################
#
inpath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_out/dist/"#
outpath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_dbh/"#
#
hcls <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
khmax <- c(60,44,50,26,27,45,22,23,32,42,31,22,6,29,27,33,10,45,42,36,30,45,25,52,27,22,19,30,39,43)						# Species-specific max height [m]#
kdmax <- c(187,100,180,165,95,99,55,55,99,110,110,110,25,121,99,198,22,154,154,220,110,110,66,143,220,66,66,110,110,143)	# Species-specific max diameter [cm]#
hmin <- 1.37	# "Minimum" height [m]								#
#
#years <- 1971:2015											#
years <- 1535:1549#
#
# List of all input file#
files.in <- list.files(inpath,full.names=TRUE)	# Full paths#
fils.in <- list.files(inpath,full.names=FALSE)	# File names only#
#
# Remove files that do not cover the selected years and/or ecoregions#
nchfiles <- nchar(files.in[2])  # Second element of files.in because 1st element (file name) had a different structure#
#files.in <- files.in[substr(files.in,(nchfiles-7),(nchfiles-4)) %in% years & substr(files.in,(nchfiles-12),(nchfiles-12)) == 1]#
files.in <- files.in[substr(files.in,(nchfiles-7),(nchfiles-4)) %in% years]#
nchfils <- nchar(fils.in[2])#
#fils.in <- fils.in[substr(fils.in,(nchfils-7),(nchfils-4)) %in% years & substr(fils.in,(nchfils-12),(nchfils-12)) == 1]#
fils.in <- fils.in[substr(fils.in,(nchfils-7),(nchfils-4)) %in% years]#
#
for(file in 1:length(files.in)){#
	# Read in file for the current year#
	#height.in <- read.table(files.in[file],header=TRUE)#
	height.in <- read.table(files.in[file],header=FALSE)#
	year <- substr(fils.in[file],(nchfils-7),(nchfils-4))#
	#ecor <- substr(fils.in[file],(nchfils-12),(nchfils-9))#
	ecor <- substr(fils.in[file],(nchfils-15),(nchfils-9))#
	# Convert from trees/plot to trees/ha#
	plotsize <- 833#
	height.in[,2:17] <- height.in[,2:17] * (10000/833)#
	# Make a look-up table for DBH - each row/column value contains the DBH of the corresponding species/height class  #
	dbh <- height.in#
	dbh[,2:17] <- 0#
	# This data.frame will contain the number of trees per species and DBH class#
	dbh.table <- data.frame(spc = numeric(0), dbh=numeric(0), count=numeric(0))#
	for(i in 1:30){#
		# The next 2 lines calculate the DBH corresponding to each height class for each species#
		args <- arg(hcls,khmax[i])#
		dbh[i,2:17] <- (kdmax[i] * (1-sqrt(args))) + 1.27#
		# Retrieve number of trees per species and DBH class. If there are trees in a class, a new line is added to the output data.frame.#
		rec <- vector("numeric",3)#
		for(j in 1:15){#
			column <- j+2#
			if(height.in[i,column] > 0){#
				rec[1] <- i#
				rec[2] <- dbh[i,column]#
				rec[3] <- height.in[i,column]#
				dbh.table <- rbind(dbh.table,rec)#
			}#
		}#
	}#
	names(dbh.table) <- c("spc","dbh","count")#
	options(scipen=20)	# Prevent output in scientific notation#
	write.table(format(dbh.table,digits=2),paste0("/Volumes/FORHYCS/Projects/Eco/sample_output/ecor_dbh/sample_",ecor,"_",year,"_dbh.txt"),row.names=FALSE,quote=FALSE)#
#
}
arg <- function(h,hmax){#
	# Auxiliary function for DBH-height allometry#
	rv <- pmin(1,pmax(0,(1-(h-1.37)/(hmax-1.37))))#
	return(rv)#
}#
#
######################################
#
inpath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_out/dist/"#
outpath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_dbh/"#
#
hcls <- c(0,1.37,seq((1.37+4.2),by=4.2,length.out=14))	# Height of each height class (corresponds to *lower* bound of class)#
khmax <- c(60,44,50,26,27,45,22,23,32,42,31,22,6,29,27,33,10,45,42,36,30,45,25,52,27,22,19,30,39,43)						# Species-specific max height [m]#
kdmax <- c(187,100,180,165,95,99,55,55,99,110,110,110,25,121,99,198,22,154,154,220,110,110,66,143,220,66,66,110,110,143)	# Species-specific max diameter [cm]#
hmin <- 1.37	# "Minimum" height [m]								#
#
#years <- 1971:2015											#
years <- 1535:1549#
#
# List of all input file#
files.in <- list.files(inpath,full.names=TRUE)	# Full paths#
fils.in <- list.files(inpath,full.names=FALSE)	# File names only#
#
# Remove files that do not cover the selected years and/or ecoregions#
nchfiles <- nchar(files.in[2])  # Second element of files.in because 1st element (file name) had a different structure#
#files.in <- files.in[substr(files.in,(nchfiles-7),(nchfiles-4)) %in% years & substr(files.in,(nchfiles-12),(nchfiles-12)) == 1]#
files.in <- files.in[substr(files.in,(nchfiles-7),(nchfiles-4)) %in% years]#
nchfils <- nchar(fils.in[2])#
#fils.in <- fils.in[substr(fils.in,(nchfils-7),(nchfils-4)) %in% years & substr(fils.in,(nchfils-12),(nchfils-12)) == 1]#
fils.in <- fils.in[substr(fils.in,(nchfils-7),(nchfils-4)) %in% years]#
#
for(file in 1:length(files.in)){#
	# Read in file for the current year#
	#height.in <- read.table(files.in[file],header=TRUE)#
	height.in <- read.table(files.in[file],header=FALSE)#
	year <- substr(fils.in[file],(nchfils-7),(nchfils-4))#
	#ecor <- substr(fils.in[file],(nchfils-12),(nchfils-9))#
	ecor <- substr(fils.in[file],(nchfils-15),(nchfils-9))#
	# Convert from trees/plot to trees/ha#
	plotsize <- 833#
	height.in[,2:17] <- height.in[,2:17] * (10000/833)#
	# Make a look-up table for DBH - each row/column value contains the DBH of the corresponding species/height class  #
	dbh <- height.in#
	dbh[,2:17] <- 0#
	# This data.frame will contain the number of trees per species and DBH class#
	dbh.table <- data.frame(spc = numeric(0), dbh=numeric(0), count=numeric(0))#
	for(i in 1:30){#
		# The next 2 lines calculate the DBH corresponding to each height class for each species#
		args <- arg(hcls,khmax[i])#
		dbh[i,2:17] <- (kdmax[i] * (1-sqrt(args))) + 1.27#
		# Retrieve number of trees per species and DBH class. If there are trees in a class, a new line is added to the output data.frame.#
		rec <- vector("numeric",3)#
		for(j in 1:15){#
			column <- j+2#
			if(height.in[i,column] > 0){#
				rec[1] <- i#
				rec[2] <- dbh[i,column]#
				rec[3] <- height.in[i,column]#
				dbh.table <- rbind(dbh.table,rec)#
			}#
		}#
	}#
	names(dbh.table) <- c("spc","dbh","count")#
	options(scipen=20)	# Prevent output in scientific notation#
	write.table(format(dbh.table,digits=2),paste0(outpath,"sample_",ecor,"_",year,"_dbh.txt"),row.names=FALSE,quote=FALSE)#
#
}
cells <- unique(substr(files.in,(nchfiles-15),(nchfiles-9)))
length(cells)
head(cells)
#### DBH files#
npath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_dbh/"#
#ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
ecors <- unique(substr(files.in,(nchfiles-15),(nchfiles-9)))  # Variables from dbh.r#
#
for(ecor in ecors){#
	for(i in 1:length(years)){#
		# Read in height class distribution for the current year#
		df.in <- read.table(paste0(npath,"sample_",ecor,"_",years[i],"_dbh.txt"),header=TRUE)#
		# Add a column with the current year#
		df.in$year <- years[i]#
		if(i==1){#
			df.all <- df.in#
		} else {#
			# Add current year to the data.frame containing all records#
			df.all <- rbind(df.all,df.in)#
		}#
	}#
# Write file with all years, without header#
write.table(df.all,file=paste0(npath,"allyears_", ecor,"_sample_dbh.txt"),row.names=FALSE,col.names=FALSE,sep=",")#
}
ecor
which(ecors==ecor)
i
df.in
npath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_dbh/"#
#ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
ecors <- unique(substr(files.in,(nchfiles-15),(nchfiles-9)))  # Variables from dbh.r#
#
for(ecor in ecors){#
	for(i in 1:length(years)){#
		# Read in height class distribution for the current year#
		df.in <- read.table(paste0(npath,"sample_",ecor,"_",years[i],"_dbh.txt"),header=TRUE)#
		# Add a column with the current year#
		df.in$year <- years[i]#
		if(nrow(df.in) > 0){#
			if(i==1){#
				df.all <- df.in#
			} else {#
				# Add current year to the data.frame containing all records#
				df.all <- rbind(df.all,df.in)#
			}#
		}	#
	}#
# Write file with all years, without header#
write.table(df.all,file=paste0(npath,"allyears_", ecor,"_sample_dbh.txt"),row.names=FALSE,col.names=FALSE,sep=",")#
}
df.in
ecor
nrow(df.in)
#### DBH files#
npath <- "/Volumes/FORHYCS/Projects/Eco/sample_output/whole_ecor_dbh/"#
#ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
ecors <- unique(substr(files.in,(nchfiles-15),(nchfiles-9)))  # Variables from dbh.r#
#
for(ecor in ecors){#
	for(i in 1:length(years)){#
		# Read in height class distribution for the current year#
		df.in <- read.table(paste0(npath,"sample_",ecor,"_",years[i],"_dbh.txt"),header=TRUE)#
		# Add a column with the current year#
#
		if(nrow(df.in) > 0){#
		df.in$year <- years[i]#
			if(i==1){#
				df.all <- df.in#
			} else {#
				# Add current year to the data.frame containing all records#
				df.all <- rbind(df.all,df.in)#
			}#
		}	#
	}#
# Write file with all years, without header#
write.table(df.all,file=paste0(npath,"allyears_", ecor,"_sample_dbh.txt"),row.names=FALSE,col.names=FALSE,sep=",")#
}
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/new_kdt_remund/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE,TRUE)#
}#
#
dev.off()
ecors <- c("1101","1102","1103","1104","1105","1106","1107","1108","1109","1201","1202","1203","1204","1205","1206","1207","1208","1209")#
plot.ecor <- function(ecor,mpath,max.bio,max.lai,roots,roots.rel=FALSE){#
	elvCl <- c("< 700","700 - 900","900 - 1100","1100 - 1300","1300 - 1500","1500 - 1700","1700 - 1900","1900 - 2100","> 2100")#
	expCl <- c("North-facing","South-facing")#
	spc <- c("Abies alba","Larix decidua","Picea abies","Pinus cembra","Pinus montana","Pinus sylvestris","Acer spp","Alnus spp.","Fagus sylvatica","Quercus spp.","Others")#
	spc.cols <- c("#00e2d7","#FA9619","#385723","#db4343","#f26565","#a30000","#8eed00","#bf00f9","#393c96","#34a877","#90a5a4")	#
	# Read in files#
	bio.in <-read.table(paste0(mpath,"bio_ecor_",ecor,".txt"),header=TRUE)#
	lai.in <-read.table(paste0(mpath,"lai_ecor_",ecor,".txt"),header=TRUE)#
	if(roots){sd.in <- read.table(paste0(mpath,"sd_ecor.txt"),header=TRUE)}#
	# Number of years#
	if(roots){#
	nyrs <- nrow(sd.in)#
	}else{#
		nyrs <- nrow(bio.in)#
	}#
# Aggregate biomass and LAI to groups of species#
	bio <- bio.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	bio$acer <- bio.in$Ac + bio.in$Ap + bio.in$As#
	bio$alnus <- bio.in$Ag + bio.in$Ai + bio.in$Av#
	bio$fagus <- bio.in$Fs#
	bio$quercus <- bio.in$Qp + bio.in$Qu + bio.in$Qr#
	bio$others <- bio.in$Tb + bio.in$Bp + bio.in$Cb + bio.in$Cs + bio.in$Ca + bio.in$Fe + bio.in$Pn + bio.in$Pt + bio.in$Sa + bio.in$So + bio.in$Sr + bio.in$Tc + bio.in$Tp + bio.in$Us#
	lai <- lai.in[,c("Aa","Ld","Pe","Pc","Pm","Ps")]#
	lai$acer <- lai.in$Ac + lai.in$Ap + lai.in$As#
	lai$alnus <- lai.in$Ag + lai.in$Ai + lai.in$Av#
	lai$fagus <- lai.in$Fs#
	lai$quercus <- lai.in$Qp + lai.in$Qu + lai.in$Qr#
	lai$others <- lai.in$Tb + lai.in$Bp + lai.in$Cb + lai.in$Cs + lai.in$Ca + lai.in$Fe + lai.in$Pn + lai.in$Pt + lai.in$Sa + lai.in$So + lai.in$Sr + lai.in$Tc + lai.in$Tp + lai.in$Us#
	# Draw biomass plot#
	par(fig=c(0,0.8,0.55,0.9))#
	par(mar=c(1,3,0,0))#
	plot.stack(df=bio,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.bio,ylab="Above-ground biomass [t/ha]",xint=20,yint=50)#
	# Draw LAI plot#
	par(fig=c(0,0.8,0.2,0.55),new=TRUE)#
	par(mar=c(1,3,0,0))#
	plot.stack(df=lai,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=max.lai,ylab="Leaf Area Index",xint=20,yint=1)#
	if(!roots){#
			axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	mtext(side=1,text="Simulation year",line=1)#
#
	}#
	if(roots){#
	# Draw soil depth line plot#
	par(fig=c(0,0.8,0,0.2),new=TRUE)#
	par(mar=c(2,3,0,0))#
	sd <- sd.in[,paste0("X",ecor)]#
	#sd.plot <- 1000-(sd*1000)#
	if(roots.rel){#
	  plot(seq(1:nyrs),sd*1000,type="n",ylim=c(0,1000),axes=FALSE)#
	  	vlpos <- seq(0,nyrs,by=20)#
	  hlpos <- seq(0,1000,by=200)#
	  abline(v=vlpos,col="lightgrey")#
	  abline(h=hlpos,col="lightgrey")#
	  lines(seq(1:nyrs),sd*1000)#
	  axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	  axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
    	mtext(side=1,text="Simulation year",line=1)#
	  mtext(side=2,text="Rooting depth [mm]",line=2)#
	}  else {#
		plot(seq(1:nyrs),sd,type="n",ylim=c(0,200),axes=FALSE)#
	vlpos <- seq(0,nyrs,by=20)#
	hlpos <- seq(0,200,by=20)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	lines(seq(1:nyrs),sd)#
	axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	axis(side=2,at=seq(0,200,by=20),labels=seq(0,200,by=20),line=-0.5)#
	mtext(side=1,text="Simulation year",line=1)#
	mtext(side=2,text="SFC [mm]",line=2)#
	}#
	# vlpos <- seq(0,nyrs,by=20)#
	# hlpos <- seq(0,1000,by=200)#
	# abline(v=vlpos,col="lightgrey")#
	# abline(h=hlpos,col="lightgrey")#
	# lines(seq(1:nyrs),sd*1000)#
	# axis(side=1,at=seq(0,nyrs,by=20),labels=seq(0,nyrs,by=20),line=-1,lwd=0,lwd.ticks=0)#
	# axis(side=2,at=seq(0,1000,by=200),labels=seq(0,1000,by=200),line=-0.5)#
	# mtext(side=1,text="Simulation year",line=1)#
	# mtext(side=2,text="Rooting depth [mm]",line=2)#
	}#
	# Draw species legend#
	par(fig=c(0.8,1,0.2,1),new=TRUE)#
	par(mar=c(2,0,3,1))#
	plot(1,1,xlim=c(0,1),ylim=c(0,1),type="n",axes=FALSE)#
	nspc <- length(spc)#
	spc.int <- 0.9/nspc#
	y.pos <- seq(0.05,0.95,by=spc.int)#
	# Start from bottom#
	spc <- rev(spc)#
	spc.cols <- rev(spc.cols)#
	for(i in 1:nspc){#
		rect(xleft = 0.05,ybottom=(y.pos[i]-(0.25*spc.int)),xright=0.25,ytop=(y.pos[i]+(0.25*spc.int)),col=spc.cols[i])#
		text(x=0.3,y=y.pos[i],adj=0,labels=spc[i],cex=0.75)#
	}#
	par(fig=c(0,1,0.9,1),new=TRUE)#
	# Title for whole plot#
	asp.code <- as.numeric(substr(ecor,2,2))#
	elv.code <- as.numeric(substr(ecor,3,4))#
	asp.str <- expCl[asp.code]#
	elv.str <- elvCl[elv.code]#
	mtext(text=paste0(elv.str, " m asl - ",asp.str),side=3,font=2,cex=2)#
}#
#
plot.stack <- function(df,order,cols,xlen,ylen,ylab,xint,yint){#
	plot(10,10,xlim=c(1,xlen),ylim=c(0,ylen),type="n",mgp=c(3,1,0),axes=FALSE)#
	axis(side=2,at=seq(0,ylen,by=yint),labels=seq(0,ylen,by=yint),line=-0.5)#
	mtext(side=2,text=ylab,line=2)#
	# Draw grid lines#
	vlpos <- seq(0,xlen,by=xint)#
	hlpos <- seq(0,ylen,by=yint)#
	abline(v=vlpos,col="lightgrey")#
	abline(h=hlpos,col="lightgrey")#
	yb <- rep(0,xlen)#
	for(i in 1:length(order)){#
		yt <- yb + df[,order[i]]#
		polygon(x=c(seq(1,xlen),seq(xlen,1,-1)),y=c(yb,rev(yt)),col=cols[i])#
		yb <- yt#
	}#
}#
### Test#
ecor <- "1207"#
mpath <- "/Volumes/FORHYCS/Output/Ecoregions/full_succ4/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/full_succ5/"#
tmpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/succ_tm/"#
bio.in <- bio.in[2:nrow(bio.in),]#
sd.in <- bio.in[2:nrow(sd.in),]#
plot.order <- c("others","quercus","fagus","alnus","acer","Ps","Pm","Pc","Pe","Ld","Aa")#
plot.stack(df=bio,order=plot.order,cols=rev(spc.cols),xlen=nyrs,ylen=100,main="Above-ground biomass",xlab="Simulation year",ylab="Biomass [t/ha]")#
#
plot.ecor("1101",mpath,200,8)#
#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/rootslag5_2/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek2/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/dynhmax/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/bek_hmax/"#
mpath <- "/Volumes/MacSpeichHD/speichm/Documents/out/FORHYCS/new_kdt_remund/"#
#
pdf(file=paste0(mpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],mpath,300,8,TRUE,TRUE)#
}#
#
dev.off()#
pdf(file=paste0(tmpath,"succ.pdf"),width=8,height=8)#
for(i in 1:length(ecors)){#
	plot.ecor(ecors[i],tmpath,300,8,FALSE)#
}#
#
dev.off()
setwd("/Volumes/MacSpeichHD/speichm/Documents/Packages/forhytm")
library(devtools)
library(roxygen2)
document()
build()
install()
head(erl.rh)
sim <- run.forhytm(t=erl.temp,p=erl.prec,rh=erl.rh,rg=erl.rg,u=erl.wind,rssd=erl.rssd)
head(sim)
plot(sim$pt,type="l")
lines(sim$at,col="firebrick1")
plot(sim$ssm,type="l")
plot(sim$snow,type="l")
plot(sim$si,type="l")
plot(sim$esoil,type="l")
plot(sim$eint,type="l")
plot(sim$wy,type="l")
sum(erl.prec$p)
sum(sim$wy)
195*1000/600
1000/600
plor(erl.rg$r)
plot(erl.rg$r,type="l")
plot(erl.rg$r*1.6666,type="l")
erl.rg$r <- erl.rg$r * 1.66666 # kJ/10 min to W/m2
save(erl.rg,file="/Volumes/MacSpeichHD/speichm/Documents/Packages/forhytm/data/erlrg.RData")
remove.packages("forhytm")
build()
install()
remove.packages("forhytm")
rm(list=ls())
build()
install()
install()
